{"init_kwargs": {"input_desc": {"properties": {"schema": {"anyOf": [{"x-order": 2, "description": "Name of the schema the table belongs to", "title": "Schema", "temp_default": "public", "default": "public", "displayOptions": {"show": {"operation": ["insert"]}}, "displayName": "Schema", "type": "string"}, {"x-order": 5, "description": "Name of the schema the table belongs to", "title": "Schema", "temp_default": "public", "default": "public", "displayOptions": {"show": {"operation": ["update"]}}, "displayName": "Schema", "type": "string"}]}, "credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {"timescaleDb": {"type": "object", "properties": {"id": {"type": "integer"}}}}}, "updateKey": {"x-order": 7, "description": "Name of the property which decides which rows in the database should be updated. Normally that would be \"id\".", "title": "Update Key", "temp_default": "id", "default": "id", "displayOptions": {"show": {"operation": ["update"]}}, "displayName": "Update Key", "type": "string"}, "table": {"anyOf": [{"x-order": 3, "description": "Name of the table in which to insert data to", "title": "Table", "temp_default": "", "displayOptions": {"show": {"operation": ["insert"]}}, "displayName": "Table", "type": "string"}, {"x-order": 6, "description": "Name of the table in which to update data in", "title": "Table", "temp_default": "", "displayOptions": {"show": {"operation": ["update"]}}, "displayName": "Table", "type": "string"}]}, "additionalFields": {"x-order": 10, "title": "Additional Fields", "temp_default": {}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"queryParams": {"x-order": 1, "description": "Comma-separated list of properties which should be used as query parameters", "title": "Query Parameters", "temp_default": "", "displayOptions": {"show": {"/operation": ["executeQuery"]}}, "displayName": "Query Parameters", "type": "string"}, "mode": {"x-order": 0, "description": "The way queries should be sent to database. Can be used in conjunction with <b>Continue on Fail</b>. See <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.timescaledb/\">the docs</a> for more examples", "title": "Mode", "temp_default": "multiple", "default": "multiple", "displayName": "Mode", "enum": ["independently", "multiple", "transaction"]}}, "required": []}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "returnFields": {"x-order": 9, "description": "Comma-separated list of the fields that the operation will return", "title": "Return Fields", "temp_default": "*", "default": "*", "displayOptions": {"show": {"operation": ["insert", "update"]}}, "displayName": "Return Fields", "type": "string"}, "query": {"x-order": 1, "description": "The SQL query to execute. You can use n8n expressions or $1 and $2 in conjunction with query parameters.", "title": "Query", "temp_default": "", "displayOptions": {"show": {"operation": ["executeQuery"]}}, "typeOptions": {"editor": "sqlEditor", "sqlDialect": "PostgreSQL"}, "displayName": "Query", "type": "string"}, "operation": {"x-order": 0, "title": "Operation", "temp_default": "insert", "default": "insert", "displayName": "Operation", "enum": ["executeQuery", "insert", "update"]}, "columns": {"anyOf": [{"x-order": 4, "description": "Comma-separated list of the properties which should used as columns for the new rows", "title": "Columns", "temp_default": "", "displayOptions": {"show": {"operation": ["insert"]}}, "displayName": "Columns", "type": "string"}, {"x-order": 8, "description": "Comma-separated list of the properties which should used as columns for rows to update", "title": "Columns", "temp_default": "", "displayOptions": {"show": {"operation": ["update"]}}, "displayName": "Columns", "type": "string"}]}}, "required": ["schema", "query", "updateKey", "table"], "title": "Input", "type": "object"}, "title": "Scade tools: TimescaleDB", "description": "Add and update data in TimescaleDB", "scade_tools_node_name": "scade-tools-nodes-base.timescaleDb", "scade_tools_node_version": 1, "categories": ["Data & Storage", "Development"]}, "class_name": "ScadeToolsProcessor", "license_url": null}