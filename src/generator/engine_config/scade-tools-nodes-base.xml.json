{"init_kwargs": {"input_desc": {"properties": {"credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {}}, "options": {"anyOf": [{"x-order": 3, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"mode": ["jsonToxml"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"rootName": {"x-order": 5, "description": "Root element name to be used", "title": "Root Name", "temp_default": "root", "default": "root", "displayName": "Root Name", "type": "string"}, "headless": {"x-order": 4, "description": "Whether to omit the XML header", "title": "Headless", "temp_default": false, "default": false, "displayName": "Headless", "type": "boolean"}, "attrkey": {"x-order": 1, "description": "Prefix that is used to access the attributes", "title": "Attribute Key", "temp_default": "$", "default": "$", "displayName": "Attribute Key", "type": "string"}, "charkey": {"x-order": 3, "description": "Prefix that is used to access the character content", "title": "Character Key", "temp_default": "_", "default": "_", "displayName": "Character Key", "type": "string"}, "cdata": {"x-order": 2, "description": "Whether to wrap text nodes in &lt;![CDATA[ ... ]]&gt; instead of escaping when necessary. Does not add &lt;![CDATA[ ... ]]&gt; if it is not required.", "title": "Cdata", "temp_default": false, "default": false, "displayName": "Cdata", "type": "boolean"}, "allowSurrogateChars": {"x-order": 0, "description": "Whether to allow using characters from the Unicode surrogate blocks", "title": "Allow Surrogate Chars", "temp_default": false, "default": false, "displayName": "Allow Surrogate Chars", "type": "boolean"}}, "required": []}, {"x-order": 5, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"mode": ["xmlToJson"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"mergeAttrs": {"x-order": 5, "description": "Whether to merge attributes and child elements as properties of the parent, instead of keying attributes off a child attribute object. This option is ignored if ignoreAttrs is true.", "title": "Merge Attributes", "temp_default": true, "default": true, "displayName": "Merge Attributes", "type": "boolean"}, "trim": {"x-order": 8, "description": "Whether to trim the whitespace at the beginning and end of text nodes", "title": "Trim", "temp_default": false, "default": false, "displayName": "Trim", "type": "boolean"}, "normalizeTags": {"x-order": 7, "description": "Whether to normalize all tag names to lowercase", "title": "Normalize Tags", "temp_default": false, "default": false, "displayName": "Normalize Tags", "type": "boolean"}, "explicitArray": {"x-order": 2, "description": "Whether to always put child nodes in an array if true; otherwise an array is created only if there is more than one", "title": "Explicit Array", "temp_default": false, "default": false, "displayName": "Explicit Array", "type": "boolean"}, "attrkey": {"x-order": 0, "description": "Prefix that is used to access the attributes", "title": "Attribute Key", "temp_default": "$", "default": "$", "displayName": "Attribute Key", "type": "string"}, "normalize": {"x-order": 6, "description": "Whether to trim whitespaces inside text nodes", "title": "Normalize", "temp_default": false, "default": false, "displayName": "Normalize", "type": "boolean"}, "charkey": {"x-order": 1, "description": "Prefix that is used to access the character content", "title": "Character Key", "temp_default": "_", "default": "_", "displayName": "Character Key", "type": "string"}, "ignoreAttrs": {"x-order": 4, "description": "Whether to ignore all XML attributes and only create text nodes", "title": "Ignore Attributes", "temp_default": false, "default": false, "displayName": "Ignore Attributes", "type": "boolean"}, "explicitRoot": {"x-order": 3, "description": "Whether to set this if you want to get the root node in the resulting object", "title": "Explicit Root", "temp_default": true, "default": true, "displayName": "Explicit Root", "type": "boolean"}}, "required": []}]}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "xmlNotice": {"x-order": 1, "title": "If your XML is inside a binary file, use the 'Extract From File' node to convert it to text first", "temp_default": "", "displayOptions": {"show": {"mode": ["xmlToJson"]}}, "displayName": "If your XML is inside a binary file, use the 'Extract From File' node to convert it to text first", "type": "string", "ui-type": "notice"}, "mode": {"x-order": 0, "description": "From and to what format the data should be converted", "title": "Mode", "temp_default": "xmlToJson", "default": "xmlToJson", "displayName": "Mode", "enum": ["jsonToxml", "xmlToJson"]}, "dataPropertyName": {"anyOf": [{"x-order": 2, "description": "Name of the property to which to contains the converted XML data", "title": "Property Name", "temp_default": "data", "default": "data", "displayOptions": {"show": {"mode": ["jsonToxml"]}}, "displayName": "Property Name", "type": "string"}, {"x-order": 4, "description": "Name of the property which contains the XML data to convert", "title": "Property Name", "temp_default": "data", "default": "data", "displayOptions": {"show": {"mode": ["xmlToJson"]}}, "displayName": "Property Name", "type": "string"}]}}, "required": ["dataPropertyName"], "title": "Input", "type": "object"}, "title": "Scade tools: XML", "description": "Convert data from and to XML", "scade_tools_node_name": "scade-tools-nodes-base.xml", "scade_tools_node_version": 1, "categories": ["Core Nodes"]}, "class_name": "ScadeToolsProcessor", "license_url": null}