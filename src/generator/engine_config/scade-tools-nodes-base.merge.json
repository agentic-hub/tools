{"init_kwargs": {"input_desc": {"properties": {"credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {}}, "output": {"x-order": 7, "title": "Output", "temp_default": "input1", "default": "input1", "displayOptions": {"show": {"mode": ["chooseBranch"], "chooseBranchMode": ["waitForBoth"]}}, "displayName": "Output", "enum": ["input1", "input2", "empty"]}, "options": {"x-order": 8, "title": "Options", "temp_default": {}, "displayOptions": {"hide": {"mode": ["chooseBranch", "append"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"clashHandling": {"anyOf": [{"x-order": 0, "title": "Clash Handling", "temp_default": {"values": {"resolveClash": "preferInput2", "mergeMode": "deepMerge", "overrideEmpty": false}}, "default": {"values": {"resolveClash": "preferInput2", "mergeMode": "deepMerge", "overrideEmpty": false}}, "displayOptions": {"show": {"/mode": ["combine"], "/combinationMode": ["mergeByFields"]}, "hide": {"/joinMode": ["keepMatches", "keepNonMatches"]}}, "displayName": "Clash Handling", "type": "object", "ui-type": "collections", "properties": {"values": {"x-order": 0, "title": "Values", "displayName": "Values", "type": "object", "properties": {"mergeMode": {"x-order": 1, "title": "Merging Nested Fields", "temp_default": "deepMerge", "default": "deepMerge", "displayOptions": {"show": {"resolveClash": ["preferInput1", "preferInput2"]}}, "displayName": "Merging Nested Fields", "enum": ["deepMerge", "shallowMerge"]}, "resolveClash": {"x-order": 0, "title": "When Field Values Clash", "temp_default": "", "displayName": "When Field Values Clash", "enum": ["addSuffix", "preferInput1", "preferInput2"]}, "overrideEmpty": {"x-order": 2, "description": "Whether to override the preferred input version for a field if it is empty and the other version isn't. Here 'empty' means undefined, null or an empty string.", "title": "Minimize Empty Fields", "temp_default": false, "default": false, "displayOptions": {"show": {"resolveClash": ["preferInput1", "preferInput2"]}}, "displayName": "Minimize Empty Fields", "type": "boolean"}}, "required": ["mergeMode", "resolveClash", "overrideEmpty"]}}, "required": ["values"]}, {"x-order": 1, "title": "Clash Handling", "temp_default": {"values": {"resolveClash": "preferInput2", "mergeMode": "deepMerge", "overrideEmpty": false}}, "default": {"values": {"resolveClash": "preferInput2", "mergeMode": "deepMerge", "overrideEmpty": false}}, "displayOptions": {"show": {"/mode": ["combine"], "/combinationMode": ["mergeByFields"], "/joinMode": ["keepMatches"], "/outputDataFrom": ["both"]}}, "displayName": "Clash Handling", "type": "object", "ui-type": "collections", "properties": {"values": {"x-order": 0, "title": "Values", "displayName": "Values", "type": "object", "properties": {"mergeMode": {"x-order": 1, "title": "Merging Nested Fields", "temp_default": "deepMerge", "default": "deepMerge", "displayOptions": {"show": {"resolveClash": ["preferInput1", "preferInput2"]}}, "displayName": "Merging Nested Fields", "enum": ["deepMerge", "shallowMerge"]}, "resolveClash": {"x-order": 0, "title": "When Field Values Clash", "temp_default": "", "displayName": "When Field Values Clash", "enum": ["addSuffix", "preferInput1", "preferInput2"]}, "overrideEmpty": {"x-order": 2, "description": "Whether to override the preferred input version for a field if it is empty and the other version isn't. Here 'empty' means undefined, null or an empty string.", "title": "Minimize Empty Fields", "temp_default": false, "default": false, "displayOptions": {"show": {"resolveClash": ["preferInput1", "preferInput2"]}}, "displayName": "Minimize Empty Fields", "type": "boolean"}}, "required": ["mergeMode", "resolveClash", "overrideEmpty"]}}, "required": ["values"]}, {"x-order": 2, "title": "Clash Handling", "temp_default": {"values": {"resolveClash": "preferInput2", "mergeMode": "deepMerge", "overrideEmpty": false}}, "default": {"values": {"resolveClash": "preferInput2", "mergeMode": "deepMerge", "overrideEmpty": false}}, "displayOptions": {"show": {"/mode": ["combine"], "/combinationMode": ["multiplex", "mergeByPosition"]}}, "displayName": "Clash Handling", "type": "object", "ui-type": "collections", "properties": {"values": {"x-order": 0, "title": "Values", "displayName": "Values", "type": "object", "properties": {"mergeMode": {"x-order": 1, "title": "Merging Nested Fields", "temp_default": "deepMerge", "default": "deepMerge", "displayOptions": {"show": {"resolveClash": ["preferInput1", "preferInput2"]}}, "displayName": "Merging Nested Fields", "enum": ["deepMerge", "shallowMerge"]}, "resolveClash": {"x-order": 0, "title": "When Field Values Clash", "temp_default": "", "displayName": "When Field Values Clash", "enum": ["addSuffix", "preferInput1", "preferInput2"]}, "overrideEmpty": {"x-order": 2, "description": "Whether to override the preferred input version for a field if it is empty and the other version isn't. Here 'empty' means undefined, null or an empty string.", "title": "Minimize Empty Fields", "temp_default": false, "default": false, "displayOptions": {"show": {"resolveClash": ["preferInput1", "preferInput2"]}}, "displayName": "Minimize Empty Fields", "type": "boolean"}}, "required": ["mergeMode", "resolveClash", "overrideEmpty"]}}, "required": ["values"]}]}, "fuzzyCompare": {"x-order": 4, "description": "Whether to tolerate small type differences when comparing fields. E.g. the number 3 and the string '3' are treated as the same.", "title": "Fuzzy Compare", "temp_default": false, "default": false, "displayName": "Fuzzy Compare", "type": "boolean"}, "multipleMatches": {"anyOf": [{"x-order": 6, "title": "Multiple Matches", "temp_default": "all", "default": "all", "displayOptions": {"show": {"/mode": ["combine"], "/combinationMode": ["mergeByFields"], "/joinMode": ["keepMatches"], "/outputDataFrom": ["both"]}}, "displayName": "Multiple Matches", "enum": ["all", "first"]}, {"x-order": 7, "title": "Multiple Matches", "temp_default": "all", "default": "all", "displayOptions": {"show": {"/mode": ["combine"], "/combinationMode": ["mergeByFields"], "/joinMode": ["enrichInput1", "enrichInput2", "keepEverything"]}}, "displayName": "Multiple Matches", "enum": ["all", "first"]}]}, "includeUnpaired": {"x-order": 5, "description": "If there are different numbers of items in input 1 and input 2, whether to include the ones at the end with nothing to pair with", "title": "Include Any Unpaired Items", "temp_default": false, "default": false, "displayOptions": {"show": {"/mode": ["combine"], "/combinationMode": ["mergeByPosition"]}}, "displayName": "Include Any Unpaired Items", "type": "boolean"}, "disableDotNotation": {"x-order": 3, "description": "Whether to disallow referencing child fields using `parent.child` in the field name", "title": "Disable Dot Notation", "temp_default": false, "default": false, "displayOptions": {"show": {"/mode": ["combine"], "/combinationMode": ["mergeByFields"]}}, "displayName": "Disable Dot Notation", "type": "boolean"}}, "required": []}, "combinationMode": {"x-order": 1, "title": "Combination Mode", "temp_default": "mergeByFields", "default": "mergeByFields", "displayOptions": {"show": {"mode": ["combine"]}}, "displayName": "Combination Mode", "enum": ["mergeByFields", "mergeByPosition", "multiplex"]}, "mergeByFields": {"x-order": 2, "title": "Fields to Match", "temp_default": {"values": [{"field1": "", "field2": ""}]}, "displayOptions": {"show": {"mode": ["combine"], "combinationMode": ["mergeByFields"]}}, "typeOptions": {"multipleValues": true}, "displayName": "Fields to Match", "type": "object", "properties": {"values": {"title": "Values", "displayName": "Values", "type": "array", "items": {"type": "object", "properties": {"field1": {"x-order": 0, "title": "Input 1 Field", "temp_default": "", "displayName": "Input 1 Field", "type": "string"}, "field2": {"x-order": 1, "title": "Input 2 Field", "temp_default": "", "displayName": "Input 2 Field", "type": "string"}}, "required": ["field1", "field2"]}}}}, "joinMode": {"x-order": 3, "title": "Output Type", "temp_default": "keepMatches", "default": "keepMatches", "displayOptions": {"show": {"mode": ["combine"], "combinationMode": ["mergeByFields"]}}, "displayName": "Output Type", "enum": ["keepMatches", "keepNonMatches", "keepEverything", "enrichInput1", "enrichInput2"]}, "outputDataFrom": {"anyOf": [{"x-order": 4, "title": "Output Data From", "temp_default": "both", "default": "both", "displayOptions": {"show": {"mode": ["combine"], "combinationMode": ["mergeByFields"], "joinMode": ["keepMatches"]}}, "displayName": "Output Data From", "enum": ["both", "input1", "input2"]}, {"x-order": 5, "title": "Output Data From", "temp_default": "both", "default": "both", "displayOptions": {"show": {"mode": ["combine"], "combinationMode": ["mergeByFields"], "joinMode": ["keepNonMatches"]}}, "displayName": "Output Data From", "enum": ["both", "input1", "input2"]}]}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "mode": {"x-order": 0, "description": "How data of branches should be merged", "title": "Mode", "temp_default": "append", "default": "append", "displayName": "Mode", "enum": ["append", "combine", "chooseBranch"]}, "chooseBranchMode": {"x-order": 6, "title": "Output Type", "temp_default": "waitForBoth", "default": "waitForBoth", "displayOptions": {"show": {"mode": ["chooseBranch"]}}, "displayName": "Output Type", "enum": ["waitForBoth"]}}, "required": [], "title": "Input", "type": "object"}, "title": "Scade tools: Merge", "description": "Merge data of two inputs once data from both is available", "scade_tools_node_name": "scade-tools-nodes-base.merge", "scade_tools_node_version": 2, "categories": ["Core Nodes"]}, "class_name": "ScadeToolsProcessor", "license_url": null}