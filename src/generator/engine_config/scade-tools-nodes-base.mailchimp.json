{"init_kwargs": {"input_desc": {"properties": {"updateFields": {"x-order": 29, "title": "Update Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["member"], "operation": ["update"]}}, "displayName": "Update Fields", "type": "object", "ui-type": "collections", "properties": {"timestampOpt": {"x-order": 11, "description": "The date and time the subscribe confirmed their opt-in status in ISO 8601 format", "title": "Opt-in Timestamp", "temp_default": "", "displayName": "Opt-in Timestamp", "type": "string", "ui-type": "date-time"}, "language": {"x-order": 2, "description": "If set/detected, the subscriber's language", "title": "Language", "temp_default": "", "displayName": "Language", "type": "string"}, "emailType": {"x-order": 0, "description": "Type of email this member asked to get", "title": "Email Type", "temp_default": "", "displayName": "Email Type", "enum": ["html", "text"]}, "timestampSignup": {"x-order": 6, "description": "The date and time the subscriber signed up for the list in ISO 8601 format", "title": "Signup Timestamp", "temp_default": "", "displayName": "Signup Timestamp", "type": "string", "ui-type": "date-time"}, "locationFieldsUi": {"x-order": 10, "description": "Subscriber location information.n", "title": "Location", "temp_default": {}, "displayOptions": {"show": {"/resource": ["member"], "/operation": ["update"], "/jsonParameters": [false]}}, "displayName": "Location", "type": "object", "ui-type": "collections", "properties": {"locationFieldsValues": {"x-order": 0, "title": "Location", "displayName": "Location", "type": "object", "properties": {"latitude": {"x-order": 0, "description": "The location latitude", "title": "Latitude", "temp_default": "", "displayName": "Latitude", "type": "string"}, "longitude": {"x-order": 1, "description": "The location longitude", "title": "Longitude", "temp_default": "", "displayName": "Longitude", "type": "string"}}, "required": ["latitude", "longitude"]}}, "required": ["locationFieldsValues"]}, "skipMergeValidation": {"x-order": 7, "description": "Whether member data will be accepted without merge field values, even if the merge field is usually required", "title": "Skip Merge Validation", "temp_default": false, "default": false, "displayName": "Skip Merge Validation", "type": "boolean"}, "status": {"x-order": 8, "description": "Subscriber's current status", "title": "Status", "temp_default": "", "displayName": "Status", "enum": ["cleaned", "pending", "subscribed", "transactional", "unsubscribed"]}, "ipOptIn": {"x-order": 4, "description": "The IP address the subscriber used to confirm their opt-in status", "title": "Opt-in IP", "temp_default": "", "displayName": "Opt-in IP", "type": "string"}, "vip": {"x-order": 9, "description": "Vip status for subscribers", "title": "Vip", "temp_default": false, "default": false, "displayName": "Vip", "type": "boolean"}, "mergeFieldsUi": {"x-order": 3, "description": "An individual merge var and value for a member", "title": "Merge Fields", "temp_default": {}, "displayOptions": {"show": {"/resource": ["member"], "/operation": ["update"], "/jsonParameters": [false]}}, "typeOptions": {"multipleValues": true}, "displayName": "Merge Fields", "type": "object", "properties": {"mergeFieldsValues": {"title": "Field", "typeOptions": {"multipleValueButtonText": "Add Field"}, "displayName": "Field", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 1, "description": "Merge field value", "title": "Field Value", "temp_default": "", "displayName": "Field Value", "type": "string"}, "name": {"x-order": 0, "description": "Merge Field name. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Field Name or ID", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getMergeFields", "loadOptionsDependsOn": ["list"]}, "displayName": "Field Name or ID", "enum": []}}, "required": ["value", "name"]}}}}, "ipSignup": {"x-order": 5, "description": "IP address the subscriber signed up from", "title": "Signup IP", "temp_default": "", "displayName": "Signup IP", "type": "string"}, "groupsUi": {"x-order": 1, "title": "Interest Groups", "temp_default": {}, "displayOptions": {"show": {"/resource": ["member"], "/operation": ["update"], "/jsonParameters": [false]}}, "typeOptions": {"multipleValues": true}, "displayName": "Interest Groups", "type": "object", "properties": {"groupsValues": {"title": "Group", "typeOptions": {"multipleValueButtonText": "Add Interest Group"}, "displayName": "Group", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 2, "title": "Value", "temp_default": false, "default": false, "displayName": "Value", "type": "boolean"}, "categoryFieldId": {"x-order": 1, "title": "Category Field ID", "temp_default": "", "displayName": "Category Field ID", "type": "string"}, "categoryId": {"x-order": 0, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Category Name or ID", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getGroupCategories", "loadOptionsDependsOn": ["list"]}, "displayName": "Category Name or ID", "enum": []}}, "required": ["value", "categoryFieldId", "categoryId"]}}}}}, "required": []}, "locationFieldsUi": {"x-order": 11, "description": "Subscriber location information.n", "title": "Location", "temp_default": {}, "displayOptions": {"show": {"resource": ["member"], "operation": ["create"], "jsonParameters": [false]}}, "displayName": "Location", "type": "object", "ui-type": "collections", "properties": {"locationFieldsValues": {"x-order": 0, "title": "Location", "displayName": "Location", "type": "object", "properties": {"latitude": {"x-order": 0, "description": "The location latitude", "title": "Latitude", "temp_default": "", "displayName": "Latitude", "type": "string"}, "longitude": {"x-order": 1, "description": "The location longitude", "title": "Longitude", "temp_default": "", "displayName": "Longitude", "type": "string"}}, "required": ["latitude", "longitude"]}}, "required": ["locationFieldsValues"]}, "groupCategory": {"x-order": 38, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Group Category Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["listGroup"], "operation": ["getAll"]}}, "typeOptions": {"loadOptionsMethod": "getGroupCategories", "loadOptionsDependsOn": ["list"]}, "displayName": "Group Category Name or ID", "enum": []}, "campaignId": {"x-order": 44, "description": "List of Campaigns", "title": "Campaign ID", "temp_default": "", "displayOptions": {"show": {"resource": ["campaign"], "operation": ["send", "get", "delete", "replicate", "resend"]}}, "displayName": "Campaign ID", "type": "string"}, "groupJson": {"anyOf": [{"x-order": 16, "title": "Interest Groups", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["create"], "jsonParameters": [true]}}, "typeOptions": {"alwaysOpenEditWindow": true}, "displayName": "Interest Groups", "type": "string", "ui-type": "json"}, {"x-order": 32, "title": "Interest Groups", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["update"], "jsonParameters": [true]}}, "typeOptions": {"alwaysOpenEditWindow": true}, "displayName": "Interest Groups", "type": "string", "ui-type": "json"}]}, "mergeFieldsUi": {"x-order": 12, "description": "An individual merge var and value for a member", "title": "Merge Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["member"], "operation": ["create"], "jsonParameters": [false]}}, "typeOptions": {"multipleValues": true}, "displayName": "Merge Fields", "type": "object", "properties": {"mergeFieldsValues": {"title": "Field", "typeOptions": {"multipleValueButtonText": "Add Field"}, "displayName": "Field", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 1, "description": "Merge field value", "title": "Field Value", "temp_default": "", "displayName": "Field Value", "type": "string"}, "name": {"x-order": 0, "description": "Merge Field name. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Field Name or ID", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getMergeFields", "loadOptionsDependsOn": ["list"]}, "displayName": "Field Name or ID", "enum": []}}, "required": ["value", "name"]}}}}, "jsonParameters": {"anyOf": [{"x-order": 9, "title": "JSON Parameters", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["member"], "operation": ["create"]}}, "displayName": "JSON Parameters", "type": "boolean"}, {"x-order": 28, "title": "JSON Parameters", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["member"], "operation": ["update"]}}, "displayName": "JSON Parameters", "type": "boolean"}]}, "list": {"anyOf": [{"x-order": 6, "description": "List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "List Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["create"]}}, "typeOptions": {"loadOptionsMethod": "getLists"}, "displayName": "List Name or ID", "enum": []}, {"x-order": 17, "description": "List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "List Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["delete"]}}, "typeOptions": {"loadOptionsMethod": "getLists"}, "displayName": "List Name or ID", "enum": []}, {"x-order": 19, "description": "List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "List Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["get"]}}, "typeOptions": {"loadOptionsMethod": "getLists"}, "displayName": "List Name or ID", "enum": []}, {"x-order": 22, "description": "List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "List Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["getAll"]}}, "typeOptions": {"loadOptionsMethod": "getLists"}, "displayName": "List Name or ID", "enum": []}, {"x-order": 26, "description": "List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "List Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["update"]}}, "typeOptions": {"loadOptionsMethod": "getLists"}, "displayName": "List Name or ID", "enum": []}, {"x-order": 33, "description": "List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "List Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["memberTag"], "operation": ["create", "delete"]}}, "typeOptions": {"loadOptionsMethod": "getLists"}, "displayName": "List Name or ID", "enum": []}, {"x-order": 37, "description": "List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "List Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["listGroup"], "operation": ["getAll"]}}, "typeOptions": {"loadOptionsMethod": "getLists"}, "displayName": "List Name or ID", "enum": []}]}, "returnAll": {"anyOf": [{"x-order": 23, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["member"], "operation": ["getAll"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 39, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["listGroup"], "operation": ["getAll"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 41, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["campaign"], "operation": ["getAll"]}}, "displayName": "Return All", "type": "boolean"}]}, "email": {"anyOf": [{"x-order": 7, "description": "Email address for a subscriber", "title": "Email", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["create"]}}, "displayName": "Email", "type": "string"}, {"x-order": 18, "description": "Member's email", "title": "Email", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["delete"]}}, "displayName": "Email", "type": "string"}, {"x-order": 20, "description": "Member's email", "title": "Email", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["get"]}}, "displayName": "Email", "type": "string"}, {"x-order": 27, "description": "Email address of the subscriber", "title": "Email", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["update"]}}, "displayName": "Email", "type": "string"}, {"x-order": 34, "description": "Email address of the subscriber", "title": "Email", "temp_default": "", "displayOptions": {"show": {"resource": ["memberTag"], "operation": ["create", "delete"]}}, "displayName": "Email", "type": "string"}]}, "tags": {"x-order": 35, "title": "Tags", "temp_default": [], "displayOptions": {"show": {"resource": ["memberTag"], "operation": ["create", "delete"]}}, "typeOptions": {"multipleValues": true, "multipleValueButtonText": "Add Tag"}, "displayName": "Tags", "type": "string"}, "operation": {"anyOf": [{"x-order": 2, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["member"]}}, "displayName": "Operation", "enum": ["create", "delete", "get", "getAll", "update", "__CUSTOM_API_CALL__"]}, {"x-order": 3, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["memberTag"]}}, "displayName": "Operation", "enum": ["create", "delete", "__CUSTOM_API_CALL__"]}, {"x-order": 4, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["listGroup"]}}, "displayName": "Operation", "enum": ["getAll", "__CUSTOM_API_CALL__"]}, {"x-order": 5, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["campaign"]}}, "displayName": "Operation", "enum": ["delete", "get", "getAll", "replicate", "resend", "send", "__CUSTOM_API_CALL__"]}]}, "limit": {"anyOf": [{"x-order": 24, "description": "Max number of results to return", "title": "Limit", "temp_default": 500, "default": 500, "displayOptions": {"show": {"resource": ["member"], "operation": ["getAll"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 1000}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 1000}, {"x-order": 40, "description": "Max number of results to return", "title": "Limit", "temp_default": 500, "default": 500, "displayOptions": {"show": {"resource": ["listGroup"], "operation": ["getAll"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 1000}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 1000}, {"x-order": 42, "description": "Max number of results to return", "title": "Limit", "temp_default": 10, "default": 10, "displayOptions": {"show": {"resource": ["campaign"], "operation": ["getAll"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 1000}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 1000}]}, "options": {"anyOf": [{"x-order": 10, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["member"], "operation": ["create"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"timestampOpt": {"x-order": 7, "description": "The date and time the subscribe confirmed their opt-in status in ISO 8601 format", "title": "Opt-in Timestamp", "temp_default": "", "displayName": "Opt-in Timestamp", "type": "string", "ui-type": "date-time"}, "language": {"x-order": 1, "description": "If set/detected, the subscriber's language", "title": "Language", "temp_default": "", "displayName": "Language", "type": "string"}, "timestampSignup": {"x-order": 4, "description": "The date and time the subscriber signed up for the list in ISO 8601 format", "title": "Signup Timestamp", "temp_default": "", "displayName": "Signup Timestamp", "type": "string", "ui-type": "date-time"}, "emailType": {"x-order": 0, "description": "Type of email this member asked to get", "title": "Email Type", "temp_default": "", "displayName": "Email Type", "enum": ["html", "text"]}, "tags": {"x-order": 5, "description": "The tags that are associated with a member separeted by ,", "title": "Tags", "temp_default": "", "displayName": "Tags", "type": "string"}, "ipOptIn": {"x-order": 2, "description": "The IP address the subscriber used to confirm their opt-in status", "title": "Opt-in IP", "temp_default": "", "displayName": "Opt-in IP", "type": "string"}, "vip": {"x-order": 6, "description": "Vip status for subscribers", "title": "Vip", "temp_default": false, "default": false, "displayName": "Vip", "type": "boolean"}, "ipSignup": {"x-order": 3, "description": "IP address the subscriber signed up from", "title": "Signup IP", "temp_default": "", "displayName": "Signup IP", "type": "string"}}, "required": []}, {"x-order": 21, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["member"], "operation": ["get"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"fields": {"x-order": 0, "description": "A comma-separated list of fields to return", "title": "Fields", "temp_default": "", "displayName": "Fields", "type": "string"}, "excludeFields": {"x-order": 1, "description": "A comma-separated list of fields to exclude", "title": "Exclude Fields", "temp_default": "", "displayName": "Exclude Fields", "type": "string"}}, "required": []}, {"x-order": 25, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["member"], "operation": ["getAll"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"emailType": {"x-order": 2, "description": "Type of email this member asked to get", "title": "Email Type", "temp_default": "", "displayName": "Email Type", "enum": ["html", "text"]}, "beforeLastChanged": {"x-order": 0, "description": "Restrict results to subscribers whose information changed before the set timeframe", "title": "Before Last Changed", "temp_default": "", "displayName": "Before Last Changed", "type": "string", "ui-type": "date-time"}, "status": {"x-order": 3, "description": "Subscriber's current status", "title": "Status", "temp_default": "", "displayName": "Status", "enum": ["cleaned", "pending", "subscribed", "transactional", "unsubscribed"]}, "sinceLastChanged": {"x-order": 4, "description": "Restrict results to subscribers whose information changed after the set timeframe", "title": "Since Last Changed", "temp_default": "", "displayName": "Since Last Changed", "type": "string", "ui-type": "date-time"}, "beforeTimestampOpt": {"x-order": 1, "description": "Restrict results to subscribers who opted-in before the set timeframe", "title": "Before Timestamp Opt", "temp_default": "", "displayName": "Before Timestamp Opt", "type": "string", "ui-type": "date-time"}}, "required": []}, {"x-order": 36, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["memberTag"], "operation": ["create", "delete"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"isSyncing": {"x-order": 0, "description": "Whether automations based on the tags in the request will not fire", "title": "Is Syncing", "temp_default": false, "default": false, "displayName": "Is Syncing", "type": "boolean"}}, "required": []}, {"x-order": 43, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["campaign"], "operation": ["getAll"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"sortDirection": {"x-order": 7, "description": "Determines the order direction for sorted results", "title": "Sort Direction", "temp_default": "", "displayName": "Sort Direction", "enum": ["ASC", "DESC"]}, "beforeSendTime": {"x-order": 1, "description": "Restrict the response to campaigns sent before the set time", "title": "Before Send Time", "temp_default": "", "displayName": "Before Send Time", "type": "string", "ui-type": "date-time"}, "listId": {"x-order": 4, "description": "List of lists. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "List Name or ID", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getLists"}, "displayName": "List Name or ID", "enum": []}, "excludeFields": {}, "beforeCreateTime": {"x-order": 0, "description": "Restrict the response to campaigns created before the set time", "title": "Before Create Time", "temp_default": "", "displayName": "Before Create Time", "type": "string", "ui-type": "date-time"}, "status": {"x-order": 9, "description": "The status of the campaign", "title": "Status", "temp_default": "", "displayName": "Status", "enum": ["save", "sending", "sent", "schedule"]}, "sinceSendTime": {"x-order": 6, "description": "Restrict the response to campaigns sent after the set time", "title": "Since Send Time", "temp_default": "", "displayName": "Since Send Time", "type": "string", "ui-type": "date-time"}, "sinceCreateTime": {"x-order": 5, "description": "Restrict the response to campaigns created after the set time", "title": "Since Create Time", "temp_default": "", "displayName": "Since Create Time", "type": "string", "ui-type": "date-time"}, "sortField": {"x-order": 8, "description": "Returns files sorted by the specified field", "title": "Sort Field", "temp_default": "", "displayName": "Sort Field", "enum": ["create_time", "send_time"]}, "fields": {}}, "required": []}]}, "mergeFieldsJson": {"anyOf": [{"x-order": 13, "title": "Merge Fields", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["create"], "jsonParameters": [true]}}, "typeOptions": {"alwaysOpenEditWindow": true}, "displayName": "Merge Fields", "type": "string", "ui-type": "json"}, {"x-order": 30, "title": "Merge Fields", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["update"], "jsonParameters": [true]}}, "typeOptions": {"alwaysOpenEditWindow": true}, "displayName": "Merge Fields", "type": "string", "ui-type": "json"}]}, "credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {"mailchimpApi": {"type": "object", "properties": {"id": {"type": "integer"}}, "displayOptions": {"show": {"authentication": ["apiKey"]}}}, "mailchimpOAuth2Api": {"type": "object", "properties": {"id": {"type": "integer"}}, "displayOptions": {"show": {"authentication": ["oAuth2"]}}}}}, "resource": {"x-order": 1, "title": "Resource", "temp_default": "member", "default": "member", "displayName": "Resource", "enum": ["campaign", "listGroup", "member", "memberTag", "__CUSTOM_API_CALL__"]}, "status": {"x-order": 8, "description": "Subscriber's current status", "title": "Status", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["create"]}}, "displayName": "Status", "enum": ["cleaned", "pending", "subscribed", "transactional", "unsubscribed"]}, "authentication": {"x-order": 0, "title": "Authentication", "temp_default": "apiKey", "default": "apiKey", "displayName": "Authentication", "enum": ["apiKey", "oAuth2"]}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "locationJson": {"anyOf": [{"x-order": 14, "title": "Location", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["create"], "jsonParameters": [true]}}, "typeOptions": {"alwaysOpenEditWindow": true}, "displayName": "Location", "type": "string", "ui-type": "json"}, {"x-order": 31, "title": "Location", "temp_default": "", "displayOptions": {"show": {"resource": ["member"], "operation": ["update"], "jsonParameters": [true]}}, "typeOptions": {"alwaysOpenEditWindow": true}, "displayName": "Location", "type": "string", "ui-type": "json"}]}, "groupsUi": {"x-order": 15, "title": "Interest Groups", "temp_default": {}, "displayOptions": {"show": {"resource": ["member"], "operation": ["create"], "jsonParameters": [false]}}, "typeOptions": {"multipleValues": true}, "displayName": "Interest Groups", "type": "object", "properties": {"groupsValues": {"title": "Group", "typeOptions": {"multipleValueButtonText": "Add Interest Group"}, "displayName": "Group", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 2, "title": "Value", "temp_default": false, "default": false, "displayName": "Value", "type": "boolean"}, "categoryFieldId": {"x-order": 1, "title": "Category Field ID", "temp_default": "", "displayName": "Category Field ID", "type": "string"}, "categoryId": {"x-order": 0, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Category Name or ID", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getGroupCategories", "loadOptionsDependsOn": ["list"]}, "displayName": "Category Name or ID", "enum": []}}, "required": ["value", "categoryFieldId", "categoryId"]}}}}}, "required": ["list", "resource", "groupCategory", "status", "campaignId", "email", "operation"], "title": "Input", "type": "object"}, "title": "Scade tools: Mailchimp", "description": "Consume Mailchimp API", "scade_tools_node_name": "scade-tools-nodes-base.mailchimp", "scade_tools_node_version": 1, "categories": ["Marketing", "Communication"]}, "class_name": "ScadeToolsProcessor", "license_url": null}