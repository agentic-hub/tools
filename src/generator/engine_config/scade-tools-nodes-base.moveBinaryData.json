{"init_kwargs": {"input_desc": {"properties": {"credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {}}, "sourceKey": {"anyOf": [{"x-order": 2, "description": "The name of the binary key to get data from. It is also possible to define deep keys by using dot-notation like for example: \"level1.level2.currentKey\".", "title": "Source Key", "temp_default": "data", "default": "data", "displayOptions": {"show": {"mode": ["binaryToJson"]}}, "displayName": "Source Key", "type": "string"}, {"x-order": 5, "description": "The name of the JSON key to get data from. It is also possible to define deep keys by using dot-notation like for example: \"level1.level2.currentKey\".", "title": "Source Key", "temp_default": "data", "default": "data", "displayOptions": {"show": {"convertAllData": [false], "mode": ["jsonToBinary"]}}, "displayName": "Source Key", "type": "string"}]}, "setAllData": {"x-order": 1, "description": "Whether all JSON data should be replaced with the data retrieved from binary key. Else the data will be written to a single key.", "title": "Set All Data", "temp_default": true, "default": true, "displayOptions": {"show": {"mode": ["binaryToJson"]}}, "displayName": "Set All Data", "type": "boolean"}, "options": {"x-order": 7, "title": "Options", "temp_default": {}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"addBOM": {"x-order": 0, "description": "Whether to add special marker at the start of your text file. This marker helps some programs understand how to read the file correctly.", "title": "Add Byte Order Mark (BOM)", "temp_default": false, "default": false, "displayOptions": {"show": {"/mode": ["jsonToBinary"], "encoding": ["utf8", "cesu8", "ucs2"]}}, "displayName": "Add Byte Order Mark (BOM)", "type": "boolean"}, "encoding": {"x-order": 2, "description": "Choose the character set to use to encode the data", "title": "Encoding", "temp_default": "utf8", "default": "utf8", "displayOptions": {"show": {"/mode": ["binaryToJson", "jsonToBinary"]}}, "displayName": "Encoding", "enum": ["armscii8", "ascii", "base64", "big5hkscs", "binary", "cesu8", "cp1046", "cp1124", "cp1125", "cp1129", "cp1133", "cp1161", "cp1162", "cp1163", "cp437", "cp720", "cp737", "cp775", "cp808", "cp850", "cp852", "cp855", "cp856", "cp857", "cp858", "cp860", "cp861", "cp862", "cp863", "cp864", "cp865", "cp866", "cp869", "cp922", "cp936", "cp949", "cp950", "eucjp", "gb18030", "gbk", "georgianacademy", "georgianps", "hex", "hproman8", "iso646cn", "iso646jp", "iso88591", "iso885910", "iso885911", "iso885913", "iso885914", "iso885915", "iso885916", "iso88592", "iso88593", "iso88594", "iso88595", "iso88596", "iso88597", "iso88598", "iso88599", "koi8r", "koi8ru", "koi8t", "koi8u", "maccenteuro", "maccroatian", "maccyrillic", "macgreek", "maciceland", "macintosh", "macroman", "macromania", "macthai", "macturkish", "macukraine", "mik", "pt154", "rk1048", "shiftjis", "tcvn", "tis620", "ucs2", "utf16", "utf16be", "utf32", "utf32be", "utf32le", "utf7", "utf7imap", "utf8", "viscii", "windows1250", "windows1251", "windows1252", "windows1253", "windows1254", "windows1255", "windows1256", "windows1257", "windows1258", "windows874"]}, "keepAsBase64": {"x-order": 7, "description": "Whether to keep the binary data as base64 string", "title": "Keep As Base64", "temp_default": false, "default": false, "displayOptions": {"hide": {"jsonParse": [true]}, "show": {"/mode": ["binaryToJson"], "/setAllData": [false]}}, "displayName": "Keep As Base64", "type": "boolean"}, "stripBOM": {"x-order": 3, "title": "Strip BOM", "temp_default": true, "default": true, "displayOptions": {"show": {"/mode": ["binaryToJson"], "encoding": ["utf8", "cesu8", "ucs2"]}}, "displayName": "Strip BOM", "type": "boolean"}, "fileName": {"x-order": 4, "description": "The file name to set", "title": "File Name", "temp_default": "", "displayOptions": {"show": {"/mode": ["jsonToBinary"]}}, "displayName": "File Name", "type": "string"}, "mimeType": {"x-order": 8, "description": "The mime-type to set. By default will the mime-type for JSON be set.", "title": "MIME Type", "temp_default": "application/json", "default": "application/json", "displayOptions": {"show": {"/mode": ["jsonToBinary"]}}, "displayName": "MIME Type", "type": "string"}, "useRawData": {"x-order": 9, "description": "Whether to use data as is and do not JSON.stringify it", "title": "Use Raw Data", "temp_default": false, "default": false, "displayOptions": {"hide": {"dataIsBase64": [true]}, "show": {"/mode": ["jsonToBinary"]}}, "displayName": "Use Raw Data", "type": "boolean"}, "jsonParse": {"x-order": 5, "description": "Whether to run JSON parse on the data to get proper object data", "title": "JSON Parse", "temp_default": false, "default": false, "displayOptions": {"hide": {"keepAsBase64": [true]}, "show": {"/mode": ["binaryToJson"], "/setAllData": [false]}}, "displayName": "JSON Parse", "type": "boolean"}, "dataIsBase64": {"x-order": 1, "description": "Whether to keep the binary data as base64 string", "title": "Data Is Base64", "temp_default": false, "default": false, "displayOptions": {"hide": {"useRawData": [true]}, "show": {"/mode": ["jsonToBinary"], "/convertAllData": [false]}}, "displayName": "Data Is Base64", "type": "boolean"}, "keepSource": {"x-order": 6, "description": "Whether the source key should be kept. By default it will be deleted.", "title": "Keep Source", "temp_default": false, "default": false, "displayName": "Keep Source", "type": "boolean"}}, "required": []}, "convertAllData": {"x-order": 4, "description": "Whether all JSON data should be converted to binary. Else only the data of one key will be converted.", "title": "Convert All Data", "temp_default": true, "default": true, "displayOptions": {"show": {"mode": ["jsonToBinary"]}}, "displayName": "Convert All Data", "type": "boolean"}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "destinationKey": {"anyOf": [{"x-order": 3, "description": "The name the JSON key to copy data to. It is also possible to define deep keys by using dot-notation like for example: \"level1.level2.newKey\".", "title": "Destination Key", "temp_default": "data", "default": "data", "displayOptions": {"show": {"mode": ["binaryToJson"], "setAllData": [false]}}, "displayName": "Destination Key", "type": "string"}, {"x-order": 6, "description": "The name the binary key to copy data to. It is also possible to define deep keys by using dot-notation like for example: \"level1.level2.newKey\".", "title": "Destination Key", "temp_default": "data", "default": "data", "displayOptions": {"show": {"mode": ["jsonToBinary"]}}, "displayName": "Destination Key", "type": "string"}]}, "mode": {"x-order": 0, "description": "From and to where data should be moved", "title": "Mode", "temp_default": "binaryToJson", "default": "binaryToJson", "displayName": "Mode", "enum": ["binaryToJson", "jsonToBinary"]}}, "required": ["sourceKey", "destinationKey"], "title": "Input", "type": "object"}, "title": "Scade tools: Convert to/from binary data", "description": "Move data between binary and JSON properties", "scade_tools_node_name": "scade-tools-nodes-base.moveBinaryData", "scade_tools_node_version": 1, "categories": ["Core Nodes"]}, "class_name": "ScadeToolsProcessor", "license_url": null}