{"init_kwargs": {"input_desc": {"properties": {"filePath": {"anyOf": [{"x-order": 11, "description": "The file path of the file. Has to contain the full path.", "title": "File Path", "temp_default": "", "displayOptions": {"show": {"resource": ["file"]}, "hide": {"operation": ["list"]}}, "displayName": "File Path", "type": "string"}, {"x-order": 12, "description": "The path of the folder to list", "title": "Path", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["list"]}}, "displayName": "Path", "type": "string"}]}, "commitMessage": {"x-order": 16, "title": "Commit Message", "temp_default": "", "displayOptions": {"show": {"operation": ["create", "delete", "edit"], "resource": ["file"]}}, "displayName": "Commit Message", "type": "string"}, "getRepositoryIssuesFilters": {"x-order": 40, "title": "Filters", "temp_default": {}, "displayOptions": {"show": {"operation": ["getIssues"], "resource": ["repository"]}}, "typeOptions": {"multipleValueButtonText": "Add Filter"}, "displayName": "Filters", "type": "object", "ui-type": "collections", "properties": {"sort": {"x-order": 6, "description": "The order the issues should be returned in", "title": "Sort", "temp_default": "created", "default": "created", "displayName": "Sort", "enum": ["created", "updated", "comments"]}, "since": {"x-order": 4, "description": "Return only issues updated at or after this time", "title": "Updated Since", "temp_default": "", "displayName": "Updated Since", "type": "string", "ui-type": "date-time"}, "direction": {"x-order": 7, "description": "The sort order", "title": "Direction", "temp_default": "desc", "default": "desc", "displayName": "Direction", "enum": ["asc", "desc"]}, "assignee": {"x-order": 0, "description": "Return only issues which are assigned to a specific user", "title": "Assignee", "temp_default": "", "displayName": "Assignee", "type": "string"}, "state": {"x-order": 5, "description": "The state to set", "title": "State", "temp_default": "open", "default": "open", "displayName": "State", "enum": ["all", "closed", "open"]}, "labels": {"x-order": 3, "description": "Return only issues with the given labels. Multiple lables can be separated by comma.", "title": "Labels", "temp_default": "", "displayName": "Labels", "type": "string"}, "mentioned": {"x-order": 2, "description": "Return only issues in which a specific user was mentioned", "title": "Mentioned", "temp_default": "", "displayName": "Mentioned", "type": "string"}, "creator": {"x-order": 1, "description": "Return only issues which were created by a specific user", "title": "Creator", "temp_default": "", "displayName": "Creator", "type": "string"}}, "required": []}, "returnAll": {"anyOf": [{"x-order": 36, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["release"], "operation": ["getAll"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 38, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["repository"], "operation": ["getIssues"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 44, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["review"], "operation": ["getAll"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 51, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["user"], "operation": ["getRepositories"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 55, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["organization"], "operation": ["getRepositories"]}}, "displayName": "Return All", "type": "boolean"}]}, "organization": {"x-order": 53, "description": "The GitHub organization that the user is being invited to", "title": "Organization", "temp_default": "", "displayOptions": {"show": {"operation": ["invite"], "resource": ["user"]}}, "displayName": "Organization", "type": "string"}, "binaryPropertyName": {"anyOf": [{"x-order": 15, "title": "Input Binary Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"binaryData": [true], "operation": ["create", "edit"], "resource": ["file"]}}, "displayName": "Input Binary Field", "type": "string"}, {"x-order": 19, "title": "Put Output File in Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"asBinaryProperty": [true], "operation": ["get"], "resource": ["file"]}}, "displayName": "Put Output File in Field", "readOnly": true, "type": "string"}]}, "event": {"x-order": 47, "description": "The review action you want to perform", "title": "Event", "temp_default": "approve", "default": "approve", "displayOptions": {"show": {"operation": ["create"], "resource": ["review"]}}, "displayName": "Event", "enum": ["approve", "requestChanges", "comment", "pending"]}, "email": {"x-order": 54, "description": "The email address of the invited user", "title": "Email", "temp_default": "", "displayOptions": {"show": {"operation": ["invite"], "resource": ["user"]}}, "displayName": "Email", "type": "string"}, "fileContent": {"x-order": 14, "description": "The text content of the file", "title": "File Content", "temp_default": "", "displayOptions": {"show": {"binaryData": [false], "operation": ["create", "edit"], "resource": ["file"]}}, "displayName": "File Content", "type": "string"}, "reviewId": {"x-order": 42, "description": "ID of the review", "title": "Review ID", "temp_default": "", "displayOptions": {"show": {"operation": ["get", "update"], "resource": ["review"]}}, "displayName": "Review ID", "type": "string"}, "release_id": {"x-order": 34, "title": "Release ID", "temp_default": "", "displayOptions": {"show": {"resource": ["release"], "operation": ["get", "delete", "update"]}}, "displayName": "Release ID", "type": "string"}, "issueNumber": {"anyOf": [{"x-order": 25, "description": "The number of the issue on which to create the comment on", "title": "Issue Number", "temp_default": 0, "displayOptions": {"show": {"operation": ["createComment"], "resource": ["issue"]}}, "displayName": "Issue Number", "type": "number"}, {"x-order": 27, "description": "The number of the issue edit", "title": "Issue Number", "temp_default": 0, "displayOptions": {"show": {"operation": ["edit"], "resource": ["issue"]}}, "displayName": "Issue Number", "type": "number"}, {"x-order": 29, "description": "The number of the issue get data of", "title": "Issue Number", "temp_default": 0, "displayOptions": {"show": {"operation": ["get"], "resource": ["issue"]}}, "displayName": "Issue Number", "type": "number"}, {"x-order": 30, "description": "The number of the issue to lock", "title": "Issue Number", "temp_default": 0, "displayOptions": {"show": {"operation": ["lock"], "resource": ["issue"]}}, "displayName": "Issue Number", "type": "number"}]}, "binaryData": {"x-order": 13, "description": "Whether the data to upload should be taken from binary field", "title": "Binary File", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["create", "edit"], "resource": ["file"]}}, "displayName": "Binary File", "type": "boolean"}, "operation": {"anyOf": [{"x-order": 2, "title": "Operation", "temp_default": "getRepositories", "default": "getRepositories", "displayOptions": {"show": {"resource": ["organization"]}}, "displayName": "Operation", "enum": ["getRepositories", "__CUSTOM_API_CALL__"]}, {"x-order": 3, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["issue"]}}, "displayName": "Operation", "enum": ["create", "createComment", "edit", "get", "lock", "__CUSTOM_API_CALL__"]}, {"x-order": 4, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["file"]}}, "displayName": "Operation", "enum": ["create", "delete", "edit", "get", "list", "__CUSTOM_API_CALL__"]}, {"x-order": 5, "title": "Operation", "temp_default": "getIssues", "default": "getIssues", "displayOptions": {"show": {"resource": ["repository"]}}, "displayName": "Operation", "enum": ["get", "getIssues", "getLicense", "getProfile", "listPopularPaths", "listReferrers", "__CUSTOM_API_CALL__"]}, {"x-order": 6, "title": "Operation", "temp_default": "getRepositories", "default": "getRepositories", "displayOptions": {"show": {"resource": ["user"]}}, "displayName": "Operation", "enum": ["getRepositories", "invite", "__CUSTOM_API_CALL__"]}, {"x-order": 7, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["release"]}}, "displayName": "Operation", "enum": ["create", "delete", "get", "getAll", "update", "__CUSTOM_API_CALL__"]}, {"x-order": 8, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["review"]}}, "displayName": "Operation", "enum": ["create", "get", "getAll", "update", "__CUSTOM_API_CALL__"]}]}, "pullRequestNumber": {"anyOf": [{"x-order": 41, "description": "The number of the pull request", "title": "PR Number", "temp_default": 0, "displayOptions": {"show": {"operation": ["get", "update"], "resource": ["review"]}}, "displayName": "PR Number", "type": "number"}, {"x-order": 43, "description": "The number of the pull request", "title": "PR Number", "temp_default": 0, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["review"]}}, "displayName": "PR Number", "type": "number"}, {"x-order": 46, "description": "The number of the pull request to review", "title": "PR Number", "temp_default": 0, "displayOptions": {"show": {"operation": ["create"], "resource": ["review"]}}, "displayName": "PR Number", "type": "number"}]}, "asBinaryProperty": {"x-order": 18, "description": "Whether to set the data of the file as binary property instead of returning the raw API response", "title": "As Binary Property", "temp_default": true, "default": true, "displayOptions": {"show": {"operation": ["get"], "resource": ["file"]}}, "displayName": "As Binary Property", "type": "boolean"}, "limit": {"anyOf": [{"x-order": 37, "description": "Max number of results to return", "title": "Limit", "temp_default": 50, "default": 50, "displayOptions": {"show": {"resource": ["release"], "operation": ["getAll"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 100}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 100}, {"x-order": 39, "description": "Max number of results to return", "title": "Limit", "temp_default": 50, "default": 50, "displayOptions": {"show": {"resource": ["repository"], "operation": ["getIssues"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 100}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 100}, {"x-order": 45, "description": "Max number of results to return", "title": "Limit", "temp_default": 50, "default": 50, "displayOptions": {"show": {"resource": ["review"], "operation": ["getAll"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 100}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 100}, {"x-order": 52, "description": "Max number of results to return", "title": "Limit", "temp_default": 50, "default": 50, "displayOptions": {"show": {"resource": ["user"], "operation": ["getRepositories"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 100}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 100}, {"x-order": 56, "description": "Max number of results to return", "title": "Limit", "temp_default": 50, "default": 50, "displayOptions": {"show": {"resource": ["organization"], "operation": ["getRepositories"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 100}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 100}]}, "editFields": {"x-order": 28, "title": "Edit Fields", "temp_default": {}, "displayOptions": {"show": {"operation": ["edit"], "resource": ["issue"]}}, "typeOptions": {"multipleValueButtonText": "Add Field"}, "displayName": "Edit Fields", "type": "object", "ui-type": "collections", "properties": {"body": {"x-order": 1, "description": "The body of the issue", "title": "Body", "temp_default": "", "typeOptions": {"rows": 5}, "displayName": "Body", "type": "string"}, "title": {"x-order": 0, "description": "The title of the issue", "title": "Title", "temp_default": "", "displayName": "Title", "type": "string"}, "labels": {"x-order": 3, "title": "Labels", "temp_default": {"label": ""}, "typeOptions": {"multipleValues": true, "multipleValueButtonText": "Add Label"}, "displayName": "Labels", "type": "array", "items": {"type": "object", "properties": {"label": {"x-order": 0, "description": "Label to add to issue", "title": "Label", "temp_default": "", "displayName": "Label", "type": "string"}}}}, "state": {"x-order": 2, "description": "The state to set", "title": "State", "temp_default": "open", "default": "open", "displayName": "State", "enum": ["closed", "open"]}, "assignees": {"x-order": 4, "title": "Assignees", "temp_default": {"assignee": ""}, "typeOptions": {"multipleValues": true, "multipleValueButtonText": "Add Assignee"}, "displayName": "Assignees", "type": "array", "items": {"type": "object", "properties": {"assignee": {"x-order": 0, "description": "User to assign issue to", "title": "Assignees", "temp_default": "", "displayName": "Assignees", "type": "string"}}}}}, "required": []}, "repository": {"x-order": 10, "title": "Repository Name", "temp_default": {"mode": "list", "value": ""}, "displayOptions": {"hide": {"resource": ["user", "organization"], "operation": ["getRepositories"]}}, "displayName": "Repository Name", "ui-type": "resourceLocator", "type": "object", "anyOf": [{"title": "Link", "properties": {"__rl": {"type": "boolean", "const": true, "default": true, "readOnly": true, "ui-type": "hidden"}, "mode": {"type": "string", "const": "url", "default": "url", "readOnly": true}, "value": {"type": "string", "ui-type": "regex", "placeholder": "e.g. https://github.com/n8n-io/n8n", "extractValue": {"type": "regex", "regex": "https:\\/\\/github.com\\/(?:[-_0-9a-zA-Z]+)\\/([-_.0-9a-zA-Z]+)"}, "validation": [{"type": "regex", "properties": {"regex": "https:\\/\\/github.com\\/(?:[-_0-9a-zA-Z]+)\\/([-_.0-9a-zA-Z]+)(?:.*)", "errorMessage": "Not a valid Github Repository URL"}}]}}, "required": ["__rl", "mode", "value"]}, {"title": "By Name", "properties": {"__rl": {"type": "boolean", "const": true, "default": true, "readOnly": true, "ui-type": "hidden"}, "mode": {"type": "string", "const": "name", "default": "name", "readOnly": true}, "value": {"type": "string", "ui-type": "regex", "placeholder": "e.g. n8n", "extractValue": null, "validation": [{"type": "regex", "properties": {"regex": "[-_.0-9a-zA-Z]+", "errorMessage": "Not a valid Github Repository Name"}}]}}, "required": ["__rl", "mode", "value"]}]}, "body": {"anyOf": [{"x-order": 22, "description": "The body of the issue", "title": "Body", "temp_default": "", "displayOptions": {"show": {"operation": ["create"], "resource": ["issue"]}}, "typeOptions": {"rows": 5}, "displayName": "Body", "type": "string"}, {"x-order": 26, "description": "The body of the comment", "title": "Body", "temp_default": "", "displayOptions": {"show": {"operation": ["createComment"], "resource": ["issue"]}}, "typeOptions": {"rows": 5}, "displayName": "Body", "type": "string"}, {"x-order": 48, "description": "The body of the review (required for events Request Changes or Comment)", "title": "Body", "temp_default": "", "displayOptions": {"show": {"operation": ["create"], "resource": ["review"], "event": ["requestChanges", "comment"]}}, "displayName": "Body", "type": "string"}, {"x-order": 50, "description": "The body of the review", "title": "Body", "temp_default": "", "displayOptions": {"show": {"operation": ["update"], "resource": ["review"]}}, "displayName": "Body", "type": "string"}]}, "lockReason": {"x-order": 31, "description": "The reason to lock the issue", "title": "Lock Reason", "temp_default": "resolved", "default": "resolved", "displayOptions": {"show": {"operation": ["lock"], "resource": ["issue"]}}, "displayName": "Lock Reason", "enum": ["off-topic", "too heated", "resolved", "spam"]}, "credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {"githubApi": {"type": "object", "properties": {"id": {"type": "integer"}}, "displayOptions": {"show": {"authentication": ["accessToken"]}}}, "githubOAuth2Api": {"type": "object", "properties": {"id": {"type": "integer"}}, "displayOptions": {"show": {"authentication": ["oAuth2"]}}}}}, "resource": {"x-order": 1, "title": "Resource", "temp_default": "issue", "default": "issue", "displayName": "Resource", "enum": ["file", "issue", "organization", "release", "repository", "review", "user", "__CUSTOM_API_CALL__"]}, "additionalFields": {"anyOf": [{"x-order": 33, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"operation": ["create"], "resource": ["release"]}}, "typeOptions": {"multipleValueButtonText": "Add Field"}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"name": {"x-order": 0, "description": "The name of the issue", "title": "Name", "temp_default": "", "displayName": "Name", "type": "string"}, "prerelease": {"x-order": 3, "description": "Whether to point out that the release is non-production ready", "title": "Prerelease", "temp_default": false, "default": false, "displayName": "Prerelease", "type": "boolean"}, "body": {"x-order": 1, "description": "The body of the release", "title": "Body", "temp_default": "", "typeOptions": {"rows": 5}, "displayName": "Body", "type": "string"}, "draft": {"x-order": 2, "description": "Whether to create a draft (unpublished) release, \"false\" to create a published one", "title": "Draft", "temp_default": false, "default": false, "displayName": "Draft", "type": "boolean"}, "target_commitish": {"x-order": 4, "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch(usually master).", "title": "Target Commitish", "temp_default": "", "displayName": "Target Commitish", "type": "string"}}, "required": []}, {"x-order": 35, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"operation": ["update"], "resource": ["release"]}}, "typeOptions": {"multipleValueButtonText": "Add Field"}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"name": {"x-order": 2, "description": "The name of the release", "title": "Name", "temp_default": "", "displayName": "Name", "type": "string"}, "prerelease": {"x-order": 3, "description": "Whether to point out that the release is non-production ready", "title": "Prerelease", "temp_default": false, "default": false, "displayName": "Prerelease", "type": "boolean"}, "body": {"x-order": 0, "description": "The body of the release", "title": "Body", "temp_default": "", "typeOptions": {"rows": 5}, "displayName": "Body", "type": "string"}, "tag_name": {"x-order": 4, "description": "The name of the tag", "title": "Tag Name", "temp_default": "", "displayName": "Tag Name", "type": "string"}, "draft": {"x-order": 1, "description": "Whether to create a draft (unpublished) release, \"false\" to create a published one", "title": "Draft", "temp_default": false, "default": false, "displayName": "Draft", "type": "boolean"}, "target_commitish": {"x-order": 5, "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch(usually master).", "title": "Target Commitish", "temp_default": "", "displayName": "Target Commitish", "type": "string"}}, "required": []}, {"x-order": 49, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"operation": ["create"], "resource": ["review"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"commitId": {"x-order": 0, "description": "The SHA of the commit that needs a review, if different from the latest", "title": "Commit ID", "temp_default": "", "displayName": "Commit ID", "type": "string"}}, "required": []}]}, "authentication": {"x-order": 0, "title": "Authentication", "temp_default": "accessToken", "default": "accessToken", "displayName": "Authentication", "enum": ["accessToken", "oAuth2"]}, "additionalParameters": {"anyOf": [{"x-order": 17, "description": "Additional fields to add", "title": "Additional Parameters", "temp_default": {}, "displayOptions": {"show": {"operation": ["create", "delete", "edit"], "resource": ["file"]}}, "displayName": "Additional Parameters", "type": "object", "ui-type": "collections", "properties": {"committer": {"x-order": 2, "title": "Committer", "displayName": "Committer", "type": "object", "properties": {"name": {"x-order": 0, "description": "The name of the committer of the commit", "title": "Name", "temp_default": "", "displayName": "Name", "type": "string"}, "email": {"x-order": 1, "description": "The email of the committer of the commit", "title": "Email", "temp_default": "", "displayName": "Email", "type": "string"}}, "required": ["name", "email"]}, "branch": {"x-order": 1, "title": "Branch", "displayName": "Branch", "type": "object", "properties": {"branch": {"x-order": 0, "description": "The branch to commit to. If not set the repository\u2019s default branch (usually master) is used.", "title": "Branch", "temp_default": "", "displayName": "Branch", "type": "string"}}, "required": ["branch"]}, "author": {"x-order": 0, "title": "Author", "displayName": "Author", "type": "object", "properties": {"name": {"x-order": 0, "description": "The name of the author of the commit", "title": "Name", "temp_default": "", "displayName": "Name", "type": "string"}, "email": {"x-order": 1, "description": "The email of the author of the commit", "title": "Email", "temp_default": "", "displayName": "Email", "type": "string"}}, "required": ["name", "email"]}}, "required": ["committer", "branch", "author"]}, {"x-order": 20, "description": "Additional fields to add", "title": "Additional Parameters", "temp_default": {}, "displayOptions": {"show": {"operation": ["get"], "resource": ["file"]}}, "displayName": "Additional Parameters", "type": "object", "ui-type": "collections", "properties": {"reference": {"x-order": 0, "description": "The name of the commit/branch/tag. Default: the repository\u2019s default branch (usually master).", "title": "Reference", "temp_default": "", "displayName": "Reference", "type": "string"}}, "required": []}]}, "title": {"x-order": 21, "description": "The title of the issue", "title": "Title", "temp_default": "", "displayOptions": {"show": {"operation": ["create"], "resource": ["issue"]}}, "displayName": "Title", "type": "string"}, "owner": {"x-order": 9, "title": "Repository Owner", "temp_default": {"mode": "list", "value": ""}, "displayOptions": {"hide": {"operation": ["invite"]}}, "displayName": "Repository Owner", "ui-type": "resourceLocator", "type": "object", "anyOf": [{"title": "Link", "properties": {"__rl": {"type": "boolean", "const": true, "default": true, "readOnly": true, "ui-type": "hidden"}, "mode": {"type": "string", "const": "url", "default": "url", "readOnly": true}, "value": {"type": "string", "ui-type": "regex", "placeholder": "e.g. https://github.com/n8n-io", "extractValue": {"type": "regex", "regex": "https:\\/\\/github.com\\/([-_0-9a-zA-Z]+)"}, "validation": [{"type": "regex", "properties": {"regex": "https:\\/\\/github.com\\/([-_0-9a-zA-Z]+)(?:.*)", "errorMessage": "Not a valid Github URL"}}]}}, "required": ["__rl", "mode", "value"]}, {"title": "By Name", "properties": {"__rl": {"type": "boolean", "const": true, "default": true, "readOnly": true, "ui-type": "hidden"}, "mode": {"type": "string", "const": "name", "default": "name", "readOnly": true}, "value": {"type": "string", "ui-type": "regex", "placeholder": "e.g. n8n-io", "extractValue": null, "validation": [{"type": "regex", "properties": {"regex": "[-_a-zA-Z0-9]+", "errorMessage": "Not a valid Github Owner Name"}}]}}, "required": ["__rl", "mode", "value"]}]}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "releaseTag": {"x-order": 32, "description": "The tag of the release", "title": "Tag", "temp_default": "", "displayOptions": {"show": {"operation": ["create"], "resource": ["release"]}}, "displayName": "Tag", "type": "string"}, "labels": {"x-order": 23, "title": "Labels", "temp_default": {"label": ""}, "displayOptions": {"show": {"operation": ["create"], "resource": ["issue"]}}, "typeOptions": {"multipleValues": true, "multipleValueButtonText": "Add Label"}, "displayName": "Labels", "type": "array", "items": {"type": "object", "properties": {"label": {"x-order": 0, "description": "Label to add to issue", "title": "Label", "temp_default": "", "displayName": "Label", "type": "string"}}}}, "assignees": {"x-order": 24, "title": "Assignees", "temp_default": {"assignee": ""}, "displayOptions": {"show": {"operation": ["create"], "resource": ["issue"]}}, "typeOptions": {"multipleValues": true, "multipleValueButtonText": "Add Assignee"}, "displayName": "Assignees", "type": "array", "items": {"type": "object", "properties": {"assignee": {"x-order": 0, "description": "User to assign issue too", "title": "Assignee", "temp_default": "", "displayName": "Assignee", "type": "string"}}}}}, "required": ["filePath", "organization", "binaryPropertyName", "commitMessage", "repository", "email", "issueNumber", "fileContent", "title", "reviewId", "releaseTag", "release_id", "owner", "binaryData", "pullRequestNumber"], "title": "Input", "type": "object"}, "title": "Scade tools: GitHub", "description": "Consume GitHub API", "scade_tools_node_name": "scade-tools-nodes-base.github", "scade_tools_node_version": 1, "categories": ["Development"]}, "class_name": "ScadeToolsProcessor", "license_url": null}