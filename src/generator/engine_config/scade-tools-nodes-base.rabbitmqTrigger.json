{"init_kwargs": {"input_desc": {"properties": {"credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {"rabbitmq": {"type": "object", "properties": {"id": {"type": "integer"}}}}}, "options": {"x-order": 1, "title": "Options", "temp_default": {}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"jsonParseBody": {"x-order": 10, "description": "Whether to parse the body to an object", "title": "JSON Parse Body", "temp_default": false, "default": false, "displayOptions": {"hide": {"contentIsBinary": [true]}}, "displayName": "JSON Parse Body", "type": "boolean"}, "exclusive": {"x-order": 8, "description": "Whether to scope the queue to the connection", "title": "Exclusive", "temp_default": false, "default": false, "displayName": "Exclusive", "type": "boolean"}, "autoDelete": {"x-order": 3, "description": "Whether the queue will be deleted when the number of consumers drops to zero", "title": "Auto Delete Queue", "temp_default": false, "default": false, "displayName": "Auto Delete Queue", "type": "boolean"}, "binding": {"x-order": 4, "description": "Add binding to queu", "title": "Binding", "temp_default": {}, "typeOptions": {"multipleValues": true}, "displayName": "Binding", "type": "object", "properties": {"bindings": {"title": "Binding", "displayName": "Binding", "type": "array", "items": {"type": "object", "properties": {"exchange": {"x-order": 0, "title": "Exchange", "temp_default": "", "displayName": "Exchange", "type": "string"}, "routingKey": {"x-order": 1, "title": "RoutingKey", "temp_default": "", "displayName": "RoutingKey", "type": "string"}}, "required": ["exchange", "routingKey"]}}}}, "durable": {"x-order": 7, "description": "Whether the queue will survive broker restarts", "title": "Durable", "temp_default": true, "default": true, "displayName": "Durable", "type": "boolean"}, "headers": {"x-order": 9, "description": "Headers to add", "title": "Headers", "temp_default": {}, "typeOptions": {"multipleValues": true}, "displayName": "Headers", "type": "object", "properties": {"header": {"title": "Header", "displayName": "Header", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 1, "title": "Value", "temp_default": "", "displayName": "Value", "type": "string"}, "key": {"x-order": 0, "title": "Key", "temp_default": "", "displayName": "Key", "type": "string"}}, "required": ["value", "key"]}}}}, "contentIsBinary": {"x-order": 5, "description": "Whether to save the content as binary", "title": "Content Is Binary", "temp_default": false, "default": false, "displayName": "Content Is Binary", "type": "boolean"}, "assertQueue": {"x-order": 2, "description": "Whether to assert the queue exists before sending", "title": "Assert Queue", "temp_default": true, "default": true, "displayName": "Assert Queue", "type": "boolean"}, "arguments": {"x-order": 0, "description": "Arguments to add", "title": "Arguments", "temp_default": {}, "typeOptions": {"multipleValues": true}, "displayName": "Arguments", "type": "object", "properties": {"argument": {"title": "Argument", "displayName": "Argument", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 1, "title": "Value", "temp_default": "", "displayName": "Value", "type": "string"}, "key": {"x-order": 0, "title": "Key", "temp_default": "", "displayName": "Key", "type": "string"}}, "required": ["value", "key"]}}}}, "assertExchange": {"x-order": 1, "description": "Whether to assert the exchange exists before sending", "title": "Assert Exchange", "temp_default": true, "default": true, "displayName": "Assert Exchange", "type": "boolean"}, "parallelMessages": {"x-order": 12, "description": "Max number of executions at a time. Use -1 for no limit.", "title": "Parallel Message Processing Limit", "temp_default": -1, "default": -1, "displayOptions": {"hide": {"acknowledge": ["immediately"]}}, "displayName": "Parallel Message Processing Limit", "type": "number"}, "onlyContent": {"x-order": 11, "description": "Whether to return only the content property", "title": "Only Content", "temp_default": false, "default": false, "displayOptions": {"hide": {"contentIsBinary": [true]}}, "displayName": "Only Content", "type": "boolean"}, "acknowledge": {"x-order": 6, "description": "When to acknowledge the message", "title": "Delete From Queue When", "temp_default": "immediately", "default": "immediately", "displayName": "Delete From Queue When", "enum": ["executionFinishes", "executionFinishesSuccessfully", "immediately", "laterMessageNode"]}}, "required": []}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "queue": {"x-order": 0, "description": "The name of the queue to read from", "title": "Queue / Topic", "temp_default": "", "displayName": "Queue / Topic", "type": "string"}, "laterMessageNode": {"x-order": 2, "title": "To delete an item from the queue, insert a RabbitMQ node later in the workflow and use the 'Delete from queue' operation", "temp_default": "", "displayOptions": {"show": {"/options.acknowledge": ["laterMessageNode"]}}, "displayName": "To delete an item from the queue, insert a RabbitMQ node later in the workflow and use the 'Delete from queue' operation", "type": "string", "ui-type": "notice"}}, "required": [], "title": "Input", "type": "object"}, "title": "Scade tools: RabbitMQ Trigger", "description": "Listens to RabbitMQ messages", "scade_tools_node_name": "scade-tools-nodes-base.rabbitmqTrigger", "scade_tools_node_version": 1, "categories": ["Development"]}, "class_name": "ScadeToolsProcessor", "license_url": null}