{"init_kwargs": {"input_desc": {"properties": {"updateFields": {"anyOf": [{"x-order": 10, "title": "Update Fields", "temp_default": {}, "displayOptions": {"show": {"operation": ["update"], "resource": ["channel"]}}, "displayName": "Update Fields", "type": "object", "ui-type": "collections", "properties": {"brandingSettingsUi": {"x-order": 0, "description": "Encapsulates information about the branding of the channel", "title": "Branding Settings", "temp_default": {}, "typeOptions": {"multipleValues": false}, "displayName": "Branding Settings", "type": "object", "ui-type": "collections", "properties": {"imageSettingsValues": {"x-order": 1, "title": "Image Settings", "displayName": "Image Settings", "type": "object", "properties": {"image": {"x-order": 0, "description": "The image object encapsulates information about images that display on the channel's channel page or video watch pages", "title": "Image", "temp_default": {}, "typeOptions": {"multipleValues": false}, "displayName": "Image", "type": "object", "ui-type": "collections", "properties": {"watchIconImageUrl": {"x-order": 2, "title": "Watch Icon Image Url", "temp_default": "", "displayName": "Watch Icon Image Url", "type": "string"}, "trackingImageUrl": {"x-order": 1, "title": "Tracking Image Url", "temp_default": "", "displayName": "Tracking Image Url", "type": "string"}, "bannerExternalUrl": {"x-order": 0, "title": "Banner External Url", "temp_default": "", "displayName": "Banner External Url", "type": "string"}}, "required": []}}, "required": ["image"]}, "statusValue": {"x-order": 2, "title": "Status", "displayName": "Status", "type": "object", "properties": {"status": {"x-order": 0, "title": "Status", "temp_default": {}, "typeOptions": {"multipleValues": false}, "displayName": "Status", "type": "object", "ui-type": "collections", "properties": {"selfDeclaredMadeForKids": {"x-order": 0, "title": "Self Declared Made For Kids", "temp_default": false, "default": false, "displayName": "Self Declared Made For Kids", "type": "boolean"}}, "required": []}}, "required": ["status"]}, "channelSettingsValues": {"x-order": 0, "description": "The channel object encapsulates branding properties of the channel page", "title": "Channel Settings", "displayName": "Channel Settings", "type": "object", "properties": {"channel": {"x-order": 0, "title": "Channel", "temp_default": {}, "typeOptions": {"multipleValues": false}, "displayName": "Channel", "type": "object", "ui-type": "collections", "properties": {"keywords": {"x-order": 6, "description": "Keywords associated with your channel. The value is a space-separated list of strings.", "title": "Keywords", "temp_default": "", "displayName": "Keywords", "type": "string"}, "showBrowseView": {"x-order": 10, "description": "Whether the channel page should display content in a browse or feed view", "title": "Show Browse View", "temp_default": false, "default": false, "displayName": "Show Browse View", "type": "boolean"}, "moderateComments": {"x-order": 7, "description": "Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible", "title": "Moderate Comments", "temp_default": false, "default": false, "displayName": "Moderate Comments", "type": "boolean"}, "profileColor": {"x-order": 8, "description": "A prominent color that complements the channel's content", "title": "Profile Color", "temp_default": "", "displayName": "Profile Color", "type": "string"}, "featuredChannelsTitle": {"x-order": 4, "description": "The title that displays above the featured channels module. The title has a maximum length of 30 characters.", "title": "Featured Channels Title", "temp_default": "", "displayName": "Featured Channels Title", "type": "string"}, "description": {"x-order": 1, "description": "The channel description, which appears in the channel information box on your channel page. The property's value has a maximum length of 1000 characters.", "title": "Description", "temp_default": "", "displayName": "Description", "type": "string"}, "showRelatedChannels": {"x-order": 9, "description": "Whether YouTube should show an algorithmically generated list of related channels on your channel page", "title": "Show Related Channels", "temp_default": false, "default": false, "displayName": "Show Related Channels", "type": "boolean"}, "defaultTab": {"x-order": 3, "title": "Default Tab", "temp_default": "The content tab that users should display by default when viewers arrive at your channel page.", "default": "The content tab that users should display by default when viewers arrive at your channel page.", "displayName": "Default Tab", "type": "string"}, "featuredChannelsUrls": {"x-order": 5, "description": "A list of up to 100 channels that you would like to link to from the featured channels module. The property value is a list of YouTube channel ID values, each of which uniquely identifies a channel.", "title": "Featured Channels Urls", "temp_default": [], "typeOptions": {"multipleValues": true}, "displayName": "Featured Channels Urls", "type": "string"}, "unsubscribedTrailer": {"x-order": 12, "description": "The video that should play in the featured video module in the channel page's browse view for unsubscribed viewers", "title": "Unsubscribed Trailer", "temp_default": "", "displayName": "Unsubscribed Trailer", "type": "string"}, "trackingAnalyticsAccountId": {"x-order": 11, "description": "The ID for a Google Analytics account that you want to use to track and measure traffic to your channel", "title": "Tracking Analytics AccountId", "temp_default": "", "displayName": "Tracking Analytics AccountId", "type": "string"}, "country": {"x-order": 0, "description": "The country with which the channel is associated. Update this property to set the value of the snippet.country property.", "title": "Country", "temp_default": "", "displayName": "Country", "type": "string"}, "defaultLanguage": {"x-order": 2, "description": "The content tab that users should display by default when viewers arrive at your channel page", "title": "Default Language", "temp_default": "", "displayName": "Default Language", "type": "string"}}, "required": []}}, "required": ["channel"]}}, "required": ["imageSettingsValues", "statusValue", "channelSettingsValues"]}, "onBehalfOfContentOwner": {"x-order": 1, "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}}, "required": []}, {"x-order": 28, "title": "Update Fields", "temp_default": {}, "displayOptions": {"show": {"operation": ["update"], "resource": ["playlist"]}}, "displayName": "Update Fields", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 2, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}, "tags": {"x-order": 4, "description": "Keyword tags associated with the playlist. Mulplie can be defined separated by comma.", "title": "Tags", "temp_default": "", "displayName": "Tags", "type": "string"}, "description": {"x-order": 1, "description": "The playlist's description", "title": "Description", "temp_default": "", "displayName": "Description", "type": "string"}, "privacyStatus": {"x-order": 3, "description": "The playlist's privacy status", "title": "Privacy Status", "temp_default": "", "displayName": "Privacy Status", "enum": ["private", "public", "unlisted"]}, "defaultLanguage": {"x-order": 0, "description": "The language of the text in the playlist resource's title and description properties. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Default Language Name or ID", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getLanguages"}, "displayName": "Default Language Name or ID", "enum": []}}, "required": []}, {"x-order": 64, "title": "Update Fields", "temp_default": {}, "displayOptions": {"show": {"operation": ["update"], "resource": ["video"]}}, "displayName": "Update Fields", "type": "object", "ui-type": "collections", "properties": {"notifySubscribers": {"x-order": 4, "description": "Whether YouTube should send a notification about the new video to users who subscribe to the video's channel", "title": "Notify Subscribers", "temp_default": false, "default": false, "displayName": "Notify Subscribers", "type": "boolean"}, "publicStatsViewable": {"x-order": 6, "description": "Whether the extended video statistics on the video's watch page are publicly viewable", "title": "Public Stats Viewable", "temp_default": true, "default": true, "displayName": "Public Stats Viewable", "type": "boolean"}, "recordingDate": {"x-order": 8, "description": "The date and time when the video was recorded", "title": "Recording Date", "temp_default": "", "displayName": "Recording Date", "type": "string", "ui-type": "date-time"}, "embeddable": {"x-order": 2, "description": "Whether the video can be embedded on another website", "title": "Embeddable", "temp_default": false, "default": false, "displayName": "Embeddable", "type": "boolean"}, "selfDeclaredMadeForKids": {"x-order": 9, "description": "Whether the video is designated as child-directed, and it contains the current \"made for kids\" status of the video", "title": "Self Declared Made For Kids", "temp_default": false, "default": false, "displayName": "Self Declared Made For Kids", "type": "boolean"}, "tags": {"x-order": 10, "description": "Keyword tags associated with the playlist. Mulplie can be defined separated by comma.", "title": "Tags", "temp_default": "", "displayName": "Tags", "type": "string"}, "description": {"x-order": 1, "description": "The playlist's description", "title": "Description", "temp_default": "", "displayName": "Description", "type": "string"}, "publishAt": {"x-order": 7, "description": "If you set a value for this property, you must also set the status.privacyStatus property to private", "title": "Publish At", "temp_default": "", "displayName": "Publish At", "type": "string", "ui-type": "date-time"}, "privacyStatus": {"x-order": 5, "description": "The playlist's privacy status", "title": "Privacy Status", "temp_default": "", "displayName": "Privacy Status", "enum": ["private", "public", "unlistef"]}, "defaultLanguage": {"x-order": 0, "description": "The language of the text in the playlist resource's title and description properties. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Default Language Name or ID", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getLanguages"}, "displayName": "Default Language Name or ID", "enum": []}, "license": {"x-order": 3, "description": "The video's license", "title": "License", "temp_default": "", "displayName": "License", "enum": ["creativeCommon", "youtube"]}}, "required": []}]}, "videoId": {"anyOf": [{"x-order": 31, "title": "Video ID", "temp_default": "", "displayOptions": {"show": {"operation": ["add"], "resource": ["playlistItem"]}}, "displayName": "Video ID", "type": "string"}, {"x-order": 49, "description": "ID of the video", "title": "Video ID", "temp_default": "", "displayOptions": {"show": {"operation": ["delete"], "resource": ["video"]}}, "displayName": "Video ID", "type": "string"}, {"x-order": 51, "title": "Video ID", "temp_default": "", "displayOptions": {"show": {"operation": ["get"], "resource": ["video"]}}, "displayName": "Video ID", "type": "string"}, {"x-order": 58, "title": "Video ID", "temp_default": "", "displayOptions": {"show": {"operation": ["rate"], "resource": ["video"]}}, "displayName": "Video ID", "type": "string"}, {"x-order": 60, "title": "Video ID", "temp_default": "", "displayOptions": {"show": {"operation": ["update"], "resource": ["video"]}}, "displayName": "Video ID", "type": "string"}]}, "categoryId": {"anyOf": [{"x-order": 46, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Category Name or ID", "temp_default": "", "displayOptions": {"show": {"operation": ["upload"], "resource": ["video"]}}, "typeOptions": {"loadOptionsMethod": "getVideoCategories", "loadOptionsDependsOn": ["regionCode"]}, "displayName": "Category Name or ID", "enum": []}, {"x-order": 63, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Category Name or ID", "temp_default": "", "displayOptions": {"show": {"operation": ["update"], "resource": ["video"]}}, "typeOptions": {"loadOptionsMethod": "getVideoCategories", "loadOptionsDependsOn": ["regionCode"]}, "displayName": "Category Name or ID", "enum": []}]}, "channelId": {"anyOf": [{"x-order": 7, "description": "ID of the channel", "title": "Channel ID", "temp_default": "", "displayOptions": {"show": {"operation": ["get"], "resource": ["channel"]}}, "displayName": "Channel ID", "type": "string"}, {"x-order": 9, "title": "Channel ID", "temp_default": "", "displayOptions": {"show": {"operation": ["update"], "resource": ["channel"]}}, "displayName": "Channel ID", "type": "string"}, {"x-order": 11, "description": "ID of the channel", "title": "Channel ID", "temp_default": "", "displayOptions": {"show": {"operation": ["uploadBanner"], "resource": ["channel"]}}, "displayName": "Channel ID", "type": "string"}]}, "regionCode": {"anyOf": [{"x-order": 45, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Region Code", "temp_default": "", "displayOptions": {"show": {"operation": ["upload"], "resource": ["video"]}}, "typeOptions": {"loadOptionsMethod": "getCountriesCodes"}, "displayName": "Region Code", "enum": []}, {"x-order": 62, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Region Code", "temp_default": "", "displayOptions": {"show": {"operation": ["update"], "resource": ["video"]}}, "typeOptions": {"loadOptionsMethod": "getCountriesCodes"}, "displayName": "Region Code", "enum": []}, {"x-order": 66, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Region Code", "temp_default": "", "displayOptions": {"show": {"operation": ["getAll"], "resource": ["videoCategory"]}}, "typeOptions": {"loadOptionsMethod": "getCountriesCodes"}, "displayName": "Region Code", "enum": []}]}, "returnAll": {"anyOf": [{"x-order": 3, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["channel"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 22, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["playlist"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 40, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["playlistItem"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 54, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["video"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 67, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["videoCategory"]}}, "displayName": "Return All", "type": "boolean"}]}, "binaryProperty": {"anyOf": [{"x-order": 12, "title": "Input Binary Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["uploadBanner"], "resource": ["channel"]}}, "displayName": "Input Binary Field", "type": "string"}, {"x-order": 47, "title": "Input Binary Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["upload"], "resource": ["video"]}}, "displayName": "Input Binary Field", "type": "string"}]}, "rating": {"x-order": 59, "title": "Rating", "temp_default": "", "displayOptions": {"show": {"operation": ["rate"], "resource": ["video"]}}, "displayName": "Rating", "enum": ["dislike", "like", "none"]}, "playlistId": {"anyOf": [{"x-order": 16, "title": "Playlist ID", "temp_default": "", "displayOptions": {"show": {"operation": ["get"], "resource": ["playlist"]}}, "displayName": "Playlist ID", "type": "string"}, {"x-order": 19, "title": "Playlist ID", "temp_default": "", "displayOptions": {"show": {"operation": ["delete"], "resource": ["playlist"]}}, "displayName": "Playlist ID", "type": "string"}, {"x-order": 26, "description": "The playlist's title", "title": "Playlist ID", "temp_default": "", "displayOptions": {"show": {"operation": ["update"], "resource": ["playlist"]}}, "displayName": "Playlist ID", "type": "string"}, {"x-order": 30, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Playlist Name or ID", "temp_default": "", "displayOptions": {"show": {"operation": ["add"], "resource": ["playlistItem"]}}, "typeOptions": {"loadOptionsMethod": "getPlaylists"}, "displayName": "Playlist Name or ID", "enum": []}, {"x-order": 38, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Playlist Name or ID", "temp_default": "", "displayOptions": {"show": {"operation": ["getAll"], "resource": ["playlistItem"]}}, "typeOptions": {"loadOptionsMethod": "getPlaylists"}, "displayName": "Playlist Name or ID", "enum": []}]}, "operation": {"anyOf": [{"x-order": 1, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["channel"]}}, "displayName": "Operation", "enum": ["get", "getAll", "update", "uploadBanner", "__CUSTOM_API_CALL__"]}, {"x-order": 13, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["playlist"]}}, "displayName": "Operation", "enum": ["create", "delete", "get", "getAll", "update", "__CUSTOM_API_CALL__"]}, {"x-order": 29, "title": "Operation", "temp_default": "add", "default": "add", "displayOptions": {"show": {"resource": ["playlistItem"]}}, "displayName": "Operation", "enum": ["add", "delete", "get", "getAll", "__CUSTOM_API_CALL__"]}, {"x-order": 43, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["video"]}}, "displayName": "Operation", "enum": ["delete", "get", "getAll", "rate", "update", "upload", "__CUSTOM_API_CALL__"]}, {"x-order": 65, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["videoCategory"]}}, "displayName": "Operation", "enum": ["getAll", "__CUSTOM_API_CALL__"]}]}, "limit": {"anyOf": [{"x-order": 4, "description": "Max number of results to return", "title": "Limit", "temp_default": 25, "default": 25, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["channel"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 50}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 50}, {"x-order": 23, "description": "Max number of results to return", "title": "Limit", "temp_default": 25, "default": 25, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["playlist"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 50}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 50}, {"x-order": 41, "description": "Max number of results to return", "title": "Limit", "temp_default": 25, "default": 25, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["playlistItem"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 50}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 50}, {"x-order": 55, "description": "Max number of results to return", "title": "Limit", "temp_default": 25, "default": 25, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["video"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 50}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 50}, {"x-order": 68, "description": "Max number of results to return", "title": "Limit", "temp_default": 25, "default": 25, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["videoCategory"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 50}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 50}]}, "options": {"anyOf": [{"x-order": 6, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["channel"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 1, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}, "h1": {"x-order": 0, "description": "The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Language Code", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getLanguages"}, "displayName": "Language Code", "enum": []}}, "required": []}, {"x-order": 15, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["create"], "resource": ["playlist"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwnerChannel": {"x-order": 4, "description": "The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter.", "title": "On Behalf Of Content Owner Channel", "temp_default": "", "displayName": "On Behalf Of Content Owner Channel", "type": "string"}, "onBehalfOfContentOwner": {"x-order": 5, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}, "tags": {"x-order": 2, "description": "Keyword tags associated with the playlist. Mulplie can be defined separated by comma.", "title": "Tags", "temp_default": "", "displayName": "Tags", "type": "string"}, "description": {"x-order": 0, "description": "The playlist's description", "title": "Description", "temp_default": "", "displayName": "Description", "type": "string"}, "privacyStatus": {"x-order": 1, "description": "The playlist's privacy status", "title": "Privacy Status", "temp_default": "", "displayName": "Privacy Status", "enum": ["private", "public", "unlisted"]}, "defaultLanguage": {"x-order": 3, "description": "The language of the text in the playlist resource's title and description properties. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Default Language Name or ID", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getLanguages"}, "displayName": "Default Language Name or ID", "enum": []}}, "required": []}, {"x-order": 18, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["get"], "resource": ["playlist"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 0, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}, "onBehalfOfContentOwnerChannel": {"x-order": 1, "description": "The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added", "title": "On Behalf Of Content Owner Channel", "temp_default": "", "displayName": "On Behalf Of Content Owner Channel", "type": "string"}}, "required": []}, {"x-order": 20, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["delete"], "resource": ["playlist"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 0, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}}, "required": []}, {"x-order": 25, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["playlist"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 1, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}, "onBehalfOfContentOwnerChannel": {"x-order": 0, "description": "The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter.", "title": "On Behalf Of Content Owner Channel", "temp_default": "", "displayName": "On Behalf Of Content Owner Channel", "type": "string"}}, "required": []}, {"x-order": 32, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["add"], "resource": ["playlistItem"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"startAt": {"x-order": 4, "description": "The time, measured in seconds from the start of the video, when the video should start playing", "title": "Start At", "temp_default": "", "displayName": "Start At", "type": "string", "ui-type": "date-time"}, "onBehalfOfContentOwner": {"x-order": 2, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}, "position": {"x-order": 3, "description": "The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.", "title": "Position", "temp_default": "", "typeOptions": {"minValue": 0}, "displayName": "Position", "type": "number", "minimum": 0}, "endAt": {"x-order": 0, "description": "The time, measured in seconds from the start of the video, when the video should stop playing", "title": "End At", "temp_default": "", "displayName": "End At", "type": "string", "ui-type": "date-time"}, "note": {"x-order": 1, "description": "A user-generated note for this item. The property value has a maximum length of 280 characters.", "title": "Note", "temp_default": "", "displayName": "Note", "type": "string"}}, "required": []}, {"x-order": 35, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["get"], "resource": ["playlistItem"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 0, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}}, "required": []}, {"x-order": 37, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["delete"], "resource": ["playlistItem"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 0, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}}, "required": []}, {"x-order": 42, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["playlistItem"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 0, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}}, "required": []}, {"x-order": 48, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["upload"], "resource": ["video"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"notifySubscribers": {"x-order": 4, "description": "Whether YouTube should send a notification about the new video to users who subscribe to the video's channel", "title": "Notify Subscribers", "temp_default": false, "default": false, "displayName": "Notify Subscribers", "type": "boolean"}, "publicStatsViewable": {"x-order": 6, "description": "Whether the extended video statistics on the video's watch page are publicly viewable", "title": "Public Stats Viewable", "temp_default": true, "default": true, "displayName": "Public Stats Viewable", "type": "boolean"}, "recordingDate": {"x-order": 8, "description": "The date and time when the video was recorded", "title": "Recording Date", "temp_default": "", "displayName": "Recording Date", "type": "string", "ui-type": "date-time"}, "embeddable": {"x-order": 2, "description": "Whether the video can be embedded on another website", "title": "Embeddable", "temp_default": false, "default": false, "displayName": "Embeddable", "type": "boolean"}, "selfDeclaredMadeForKids": {"x-order": 9, "description": "Whether the video is designated as child-directed, and it contains the current \"made for kids\" status of the video", "title": "Self Declared Made For Kids", "temp_default": false, "default": false, "displayName": "Self Declared Made For Kids", "type": "boolean"}, "tags": {"x-order": 10, "description": "Keyword tags associated with the playlist. Mulplie can be defined separated by comma.", "title": "Tags", "temp_default": "", "displayName": "Tags", "type": "string"}, "description": {"x-order": 1, "description": "The playlist's description", "title": "Description", "temp_default": "", "displayName": "Description", "type": "string"}, "publishAt": {"x-order": 7, "description": "If you set a value for this property, you must also set the status.privacyStatus property to private", "title": "Publish At", "temp_default": "", "displayName": "Publish At", "type": "string", "ui-type": "date-time"}, "privacyStatus": {"x-order": 5, "description": "The playlist's privacy status", "title": "Privacy Status", "temp_default": "", "displayName": "Privacy Status", "enum": ["private", "public", "unlisted"]}, "defaultLanguage": {"x-order": 0, "description": "The language of the text in the playlist resource's title and description properties. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Default Language Name or ID", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getLanguages"}, "displayName": "Default Language Name or ID", "enum": []}, "license": {"x-order": 3, "description": "The video's license", "title": "License", "temp_default": "", "displayName": "License", "enum": ["creativeCommon", "youtube"]}}, "required": []}, {"x-order": 50, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["delete"], "resource": ["video"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 0, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}}, "required": []}, {"x-order": 53, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["get"], "resource": ["video"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"onBehalfOfContentOwner": {"x-order": 0, "description": "The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value", "title": "On Behalf Of Content Owner", "temp_default": "", "displayName": "On Behalf Of Content Owner", "type": "string"}}, "required": []}, {"x-order": 57, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["video"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"order": {"x-order": 0, "title": "Order", "temp_default": "relevance", "default": "relevance", "displayName": "Order", "enum": ["date", "relevance"]}, "safeSearch": {"x-order": 1, "title": "Safe Search", "temp_default": "", "displayName": "Safe Search", "enum": ["moderate", "none", "strict"]}}, "required": []}]}, "filters": {"anyOf": [{"x-order": 5, "title": "Filters", "temp_default": {}, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["channel"]}}, "displayName": "Filters", "type": "object", "ui-type": "collections", "properties": {"forUsername": {"x-order": 1, "description": "The forUsername parameter specifies a YouTube username, thereby requesting the channel associated with that username", "title": "For Username", "temp_default": "", "displayName": "For Username", "type": "string"}, "id": {"x-order": 2, "description": "The ID parameter specifies a comma-separated list of the YouTube channel ID(s) for the resource(s) that are being retrieved. In a channel resource, the ID property specifies the channel's YouTube channel ID.", "title": "ID", "temp_default": "", "displayName": "ID", "type": "string"}, "categoryId": {"x-order": 0, "description": "The categoryId parameter specifies a YouTube guide category, thereby requesting YouTube channels associated with that category", "title": "Category ID", "temp_default": "", "displayName": "Category ID", "type": "string"}, "managedByMe": {"x-order": 3, "description": "Whether to instruct the API to only return channels managed by the content owner that the onBehalfOfContentOwner parameter specifies", "title": "Managed By Me", "temp_default": false, "default": false, "displayName": "Managed By Me", "type": "boolean"}}, "required": []}, {"x-order": 24, "title": "Filters", "temp_default": {}, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["playlist"]}}, "displayName": "Filters", "type": "object", "ui-type": "collections", "properties": {"channelId": {"x-order": 0, "description": "This value indicates that the API should only return the specified channel's playlists", "title": "Channel ID", "temp_default": "", "displayName": "Channel ID", "type": "string"}, "id": {"x-order": 1, "description": "The ID parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a playlist resource, the ID property specifies the playlist's YouTube playlist ID.", "title": "ID", "temp_default": "", "displayName": "ID", "type": "string"}}, "required": []}, {"x-order": 56, "title": "Filters", "temp_default": {}, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["video"]}}, "displayName": "Filters", "type": "object", "ui-type": "collections", "properties": {"regionCode": {"x-order": 5, "description": "The regionCode parameter instructs the API to select a video chart available in the specified region. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Region Code", "temp_default": "", "typeOptions": {"loadOptionsMethod": "getCountriesCodes"}, "displayName": "Region Code", "enum": []}, "videoCategoryId": {"x-order": 7, "description": "The videoCategoryId parameter identifies the video category for which the chart should be retrieved", "title": "Video Category ID", "temp_default": "", "displayName": "Video Category ID", "type": "string"}, "publishedAfter": {"x-order": 2, "description": "The publishedAfter parameter indicates that the API response should only contain resources created at or after the specified time", "title": "Published After", "temp_default": "", "displayName": "Published After", "type": "string", "ui-type": "date-time"}, "videoType": {"x-order": 9, "description": "The videoType parameter lets you restrict a search to a particular type of videos", "title": "Video Type", "temp_default": "", "displayName": "Video Type", "enum": ["any", "episode", "movie"]}, "publishedBefore": {"x-order": 3, "description": "The publishedBefore parameter indicates that the API response should only contain resources created before or at the specified time", "title": "Published Before", "temp_default": "", "displayName": "Published Before", "type": "string", "ui-type": "date-time"}, "q": {"x-order": 4, "description": "The q parameter specifies the query term to search for", "title": "Query", "temp_default": "", "displayName": "Query", "type": "string"}, "relatedToVideoId": {"x-order": 6, "description": "The relatedToVideoId parameter retrieves a list of videos that are related to the video that the parameter value identifies", "title": "Related To Video ID", "temp_default": "", "displayName": "Related To Video ID", "type": "string"}, "videoSyndicated": {"x-order": 8, "description": "Whether to restrict a search to only videos that can be played outside youtube.com", "title": "Video Syndicated", "temp_default": false, "default": false, "displayName": "Video Syndicated", "type": "boolean"}, "channelId": {"x-order": 0, "description": "The channelId parameter indicates that the API response should only contain resources created by the channel", "title": "Channel ID", "temp_default": "", "displayName": "Channel ID", "type": "string"}, "forDeveloper": {"x-order": 1, "description": "Whether to restrict the search to only retrieve videos uploaded via the developer's application or website", "title": "For Developer", "temp_default": false, "default": false, "displayName": "For Developer", "type": "boolean"}}, "required": []}]}, "credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {"youTubeOAuth2Api": {"type": "object", "properties": {"id": {"type": "integer"}}}}}, "resource": {"x-order": 0, "title": "Resource", "temp_default": "channel", "default": "channel", "displayName": "Resource", "enum": ["channel", "playlist", "playlistItem", "video", "videoCategory", "__CUSTOM_API_CALL__"]}, "part": {"anyOf": [{}, {}, {}, {}, {}, {}, {}]}, "playlistItemId": {"anyOf": [{"x-order": 33, "title": "Playlist Item ID", "temp_default": "", "displayOptions": {"show": {"operation": ["get"], "resource": ["playlistItem"]}}, "displayName": "Playlist Item ID", "type": "string"}, {"x-order": 36, "title": "Playlist Item ID", "temp_default": "", "displayOptions": {"show": {"operation": ["delete"], "resource": ["playlistItem"]}}, "displayName": "Playlist Item ID", "type": "string"}]}, "title": {"anyOf": [{"x-order": 14, "description": "The playlist's title", "title": "Title", "temp_default": "", "displayOptions": {"show": {"operation": ["create"], "resource": ["playlist"]}}, "displayName": "Title", "type": "string"}, {"x-order": 27, "description": "The playlist's title", "title": "Title", "temp_default": "", "displayOptions": {"show": {"operation": ["update"], "resource": ["playlist"]}}, "displayName": "Title", "type": "string"}, {"x-order": 44, "title": "Title", "temp_default": "", "displayOptions": {"show": {"operation": ["upload"], "resource": ["video"]}}, "displayName": "Title", "type": "string"}, {"x-order": 61, "title": "Title", "temp_default": "", "displayOptions": {"show": {"operation": ["update"], "resource": ["video"]}}, "displayName": "Title", "type": "string"}]}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}}, "required": ["videoId", "regionCode", "part", "playlistItemId", "title", "binaryProperty", "channelId", "playlistId"], "title": "Input", "type": "object"}, "title": "Scade tools: YouTube", "description": "Consume YouTube API", "scade_tools_node_name": "scade-tools-nodes-base.youTube", "scade_tools_node_version": 1, "categories": ["Marketing"]}, "class_name": "ScadeToolsProcessor", "license_url": null}