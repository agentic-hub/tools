{"init_kwargs": {"input_desc": {"properties": {"fileId": {"x-order": 28, "description": "Uid of the file (should start with \"af\" e.g. \"afQoJxA4kmKEXVpkH6SYbhb\"", "title": "File ID", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["delete", "get"]}}, "displayName": "File ID", "type": "string"}, "jsonNotice": {"x-order": 23, "title": "See <a href=\"https://github.com/SEL-Columbia/formhub/wiki/Formhub-Access-Points-(API)#api-parameters\" target=\"_blank\">Formhub API docs</a> to creating filters, using the MongoDB JSON format - e.g. {\"_submission_time\":{\"$lt\":\"2021-10-01T01:02:03\"}}", "temp_default": "", "displayOptions": {"show": {"resource": ["submission"], "operation": ["getAll"], "filterType": ["json"]}}, "displayName": "See <a href=\"https://github.com/SEL-Columbia/formhub/wiki/Formhub-Access-Points-(API)#api-parameters\" target=\"_blank\">Formhub API docs</a> to creating filters, using the MongoDB JSON format - e.g. {\"_submission_time\":{\"$lt\":\"2021-10-01T01:02:03\"}}", "type": "string", "ui-type": "notice"}, "returnAll": {"anyOf": [{"x-order": 3, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["form"], "operation": ["getAll"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 11, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["hook"], "operation": ["getAll"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 20, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["submission"], "operation": ["getAll"]}}, "displayName": "Return All", "type": "boolean"}]}, "binaryPropertyName": {"anyOf": [{"x-order": 29, "description": "Name of the binary property to write the file into", "title": "Property Name", "temp_default": "data", "default": "data", "displayOptions": {"show": {"resource": ["file"], "operation": ["get"]}}, "displayName": "Property Name", "type": "string"}, {"x-order": 32, "description": "Name of the binary property containing the file to upload. Supported types: image, audio, video, csv, xml, zip.", "title": "Property Name", "temp_default": "data", "default": "data", "displayOptions": {"show": {"resource": ["file"], "operation": ["create"], "fileMode": ["binary"]}}, "displayName": "Property Name", "type": "string"}]}, "fileMode": {"x-order": 31, "title": "File Upload Mode", "temp_default": "binary", "default": "binary", "displayOptions": {"show": {"resource": ["file"], "operation": ["create"]}}, "displayName": "File Upload Mode", "enum": ["binary", "url"]}, "operation": {"anyOf": [{"x-order": 1, "title": "Operation", "temp_default": "get", "default": "get", "displayOptions": {"show": {"resource": ["form"]}}, "displayName": "Operation", "enum": ["get", "getAll", "redeploy", "__CUSTOM_API_CALL__"]}, {"x-order": 7, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["hook"]}}, "displayName": "Operation", "enum": ["get", "getAll", "getLogs", "retryAll", "retryOne", "__CUSTOM_API_CALL__"]}, {"x-order": 16, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["submission"]}}, "displayName": "Operation", "enum": ["delete", "get", "getAll", "getValidation", "setValidation", "__CUSTOM_API_CALL__"]}, {"x-order": 26, "title": "Operation", "temp_default": "get", "default": "get", "displayOptions": {"show": {"resource": ["file"]}}, "displayName": "Operation", "enum": ["create", "delete", "get", "getAll", "__CUSTOM_API_CALL__"]}]}, "formId": {"anyOf": [{"x-order": 2, "description": "Form ID (e.g. aSAvYreNzVEkrWg5Gdcvg). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Form Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["form"], "operation": ["get", "redeploy"]}}, "typeOptions": {"loadOptionsMethod": "loadForms"}, "displayName": "Form Name or ID", "enum": []}, {"x-order": 8, "description": "Form ID (e.g. aSAvYreNzVEkrWg5Gdcvg). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Form Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["hook"], "operation": ["get", "retryOne", "retryAll", "getLogs", "getAll"]}}, "typeOptions": {"loadOptionsMethod": "loadForms"}, "displayName": "Form Name or ID", "enum": []}, {"x-order": 17, "description": "Form ID (e.g. aSAvYreNzVEkrWg5Gdcvg). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Form Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["submission"], "operation": ["get", "delete", "getValidation", "setValidation", "getAll"]}}, "typeOptions": {"loadOptionsMethod": "loadForms"}, "displayName": "Form Name or ID", "enum": []}, {"x-order": 27, "description": "Form ID (e.g. aSAvYreNzVEkrWg5Gdcvg). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Form Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["file"]}}, "typeOptions": {"loadOptionsMethod": "loadForms"}, "displayName": "Form Name or ID", "enum": []}]}, "download": {"x-order": 30, "description": "Whether to download the file content into a binary property", "title": "Download File Content", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["file"], "operation": ["get"]}}, "displayName": "Download File Content", "type": "boolean"}, "limit": {"anyOf": [{"x-order": 4, "description": "Max number of results to return", "title": "Limit", "temp_default": 1000, "default": 1000, "displayOptions": {"show": {"resource": ["form"], "operation": ["getAll"], "returnAll": [false]}}, "typeOptions": {"maxValue": 3000}, "displayName": "Limit", "type": "number", "maximum": 3000}, {"x-order": 12, "description": "Max number of results to return", "title": "Limit", "temp_default": 1000, "default": 1000, "displayOptions": {"show": {"resource": ["hook"], "operation": ["getAll"], "returnAll": [false]}}, "typeOptions": {"maxValue": 3000}, "displayName": "Limit", "type": "number", "maximum": 3000}, {"x-order": 21, "description": "Max number of results to return", "title": "Limit", "temp_default": 100, "default": 100, "displayOptions": {"show": {"resource": ["submission"], "operation": ["getAll"], "returnAll": [false]}}, "typeOptions": {"maxValue": 3000}, "displayName": "Limit", "type": "number", "maximum": 3000}]}, "fileUrl": {"x-order": 33, "description": "HTTP(s) link to the file to upload", "title": "File URL", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["create"], "fileMode": ["url"]}}, "displayName": "File URL", "type": "string"}, "options": {"anyOf": [{"x-order": 5, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["form"], "operation": ["getAll"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"sort": {"x-order": 0, "title": "Sort", "temp_default": {}, "typeOptions": {"multipleValues": false}, "displayName": "Sort", "type": "object", "ui-type": "collections", "properties": {"value": {"x-order": 0, "title": "Sort", "displayName": "Sort", "type": "object", "properties": {"descending": {"x-order": 0, "description": "Whether to sort by descending order", "title": "Descending", "temp_default": true, "default": true, "displayName": "Descending", "type": "boolean"}, "ordering": {"x-order": 1, "description": "Field to order by", "title": "Order By", "temp_default": "date_modified", "default": "date_modified", "displayName": "Order By", "enum": ["asset_type", "date_modified", "name", "owner__username", "subscribers_count"]}}, "required": ["descending", "ordering"]}}, "required": ["value"]}}, "required": []}, {"x-order": 25, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["submission"], "operation": ["get", "getAll"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"sort": {"x-order": 8, "description": "Sort predicates, in MongoDB JSON format (e.g. {\"_submission_time\":1})", "title": "Sort", "temp_default": "", "displayName": "Sort", "type": "string", "ui-type": "json"}, "dataPropertyAttachmentsPrefixName": {"x-order": 2, "description": "Prefix for name of the binary property to which to write the attachments. An index starting with 0 will be added. So if name is \"attachment_\" the first attachment is saved to \"attachment_0\"", "title": "Attachments Prefix", "temp_default": "attachment_", "default": "attachment_", "displayOptions": {"show": {"download": [true], "binaryNamingScheme": ["sequence"]}}, "displayName": "Attachments Prefix", "type": "string"}, "download": {"x-order": 0, "description": "Whether to download submitted attachments", "title": "Download Attachments", "temp_default": false, "default": false, "displayName": "Download Attachments", "type": "boolean"}, "selectMask": {"x-order": 5, "description": "Comma-separated list of wildcard-style selectors for fields that should be treated as multiselect fields, i.e. parsed as arrays.", "title": "Multiselect Mask", "temp_default": "select_*", "default": "select_*", "displayName": "Multiselect Mask", "type": "string"}, "numberMask": {"x-order": 6, "description": "Comma-separated list of wildcard-style selectors for fields that should be treated as numbers", "title": "Number Mask", "temp_default": "n_*, f_*", "default": "n_*, f_*", "displayName": "Number Mask", "type": "string"}, "version": {"x-order": 4, "description": "Attachment size to retrieve, if multiple versions are available", "title": "File Size", "temp_default": "download_url", "default": "download_url", "displayOptions": {"show": {"download": [true]}}, "displayName": "File Size", "enum": ["download_url", "download_small_url", "download_medium_url", "download_large_url"]}, "binaryNamingScheme": {"x-order": 1, "title": "Attachments Naming Scheme", "temp_default": "sequence", "default": "sequence", "displayOptions": {"show": {"download": [true]}}, "displayName": "Attachments Naming Scheme", "enum": ["sequence", "question"]}, "fields": {"x-order": 3, "description": "Comma-separated list of fields to retrieve (e.g. _submission_time,_submitted_by). If left blank, all fields are retrieved.", "title": "Fields to Retrieve", "temp_default": "", "displayName": "Fields to Retrieve", "type": "string"}, "reformat": {"x-order": 7, "description": "Whether to apply some reformatting to the submission data, such as parsing GeoJSON coordinates", "title": "Reformat", "temp_default": false, "default": false, "displayName": "Reformat", "type": "boolean"}}, "required": []}]}, "filterJson": {"x-order": 24, "title": "Filters (JSON)", "temp_default": "", "displayOptions": {"show": {"resource": ["submission"], "operation": ["getAll"], "filterType": ["json"]}}, "displayName": "Filters (JSON)", "type": "string"}, "hookId": {"x-order": 9, "description": "Hook ID (starts with h, e.g. hVehywQ2oXPYGHJHKtqth4)", "title": "Hook ID", "temp_default": "", "displayOptions": {"show": {"resource": ["hook"], "operation": ["get", "retryOne", "retryAll", "getLogs"]}}, "displayName": "Hook ID", "type": "string"}, "filters": {"x-order": 6, "title": "Filters", "temp_default": {}, "displayOptions": {"show": {"resource": ["form"], "operation": ["getAll"]}}, "displayName": "Filters", "type": "object", "ui-type": "collections", "properties": {"filter": {"x-order": 0, "description": "A text search query based on form data - e.g. \"owner__username:meg AND name__icontains:quixotic\" - see <a href=\"https://github.com/kobotoolbox/kpi#searching\" target=\"_blank\">docs</a> for more details", "title": "Filter", "temp_default": "asset_type:survey", "default": "asset_type:survey", "displayName": "Filter", "type": "string"}}, "required": []}, "validationStatus": {"x-order": 19, "description": "Desired Validation Status", "title": "Validation Status", "temp_default": "", "displayOptions": {"show": {"resource": ["submission"], "operation": ["setValidation"]}}, "displayName": "Validation Status", "enum": ["validation_status_approved", "validation_status_not_approved", "validation_status_on_hold"]}, "endDate": {"x-order": 15, "description": "Maximum date for the hook log to retrieve", "title": "End Date", "temp_default": "", "displayOptions": {"show": {"resource": ["hook"], "operation": ["getLogs"]}}, "displayName": "End Date", "type": "string", "ui-type": "date-time"}, "credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {"koBoToolboxApi": {"type": "object", "properties": {"id": {"type": "integer"}}}}}, "resource": {"x-order": 0, "title": "Resource", "temp_default": "submission", "default": "submission", "displayName": "Resource", "enum": ["file", "form", "hook", "submission", "__CUSTOM_API_CALL__"]}, "status": {"x-order": 13, "description": "Only retrieve logs with a specific status", "title": "Log Status", "temp_default": "", "displayOptions": {"show": {"resource": ["hook"], "operation": ["getLogs"]}}, "displayName": "Log Status", "enum": ["", "0", "1", "2"]}, "submissionId": {"x-order": 18, "description": "Submission ID (number, e.g. 245128)", "title": "Submission ID", "temp_default": "", "displayOptions": {"show": {"resource": ["submission"], "operation": ["get", "delete", "getValidation", "setValidation"]}}, "displayName": "Submission ID", "type": "string"}, "filterType": {"x-order": 22, "title": "Filter", "temp_default": "none", "default": "none", "displayOptions": {"show": {"resource": ["submission"], "operation": ["getAll"]}}, "displayName": "Filter", "enum": ["none", "json"]}, "startDate": {"x-order": 14, "description": "Minimum date for the hook log to retrieve", "title": "Start Date", "temp_default": "", "displayOptions": {"show": {"resource": ["hook"], "operation": ["getLogs"]}}, "displayName": "Start Date", "type": "string", "ui-type": "date-time"}, "logId": {"x-order": 10, "description": "Hook log ID (starts with hl, e.g. hlSbGKaUKzTVNoWEVMYbLHe)", "title": "Hook Log ID", "temp_default": "", "displayOptions": {"show": {"resource": ["hook"], "operation": ["retryOne"]}}, "displayName": "Hook Log ID", "type": "string"}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}}, "required": ["validationStatus", "download", "returnAll", "resource", "binaryPropertyName", "fileMode", "fileUrl", "submissionId", "logId", "fileId", "hookId", "formId"], "title": "Input", "type": "object"}, "title": "Scade tools: KoBoToolbox", "description": "Work with KoBoToolbox forms and submissions", "scade_tools_node_name": "scade-tools-nodes-base.koBoToolbox", "scade_tools_node_version": 1, "categories": ["Communication", "Data & Storage"]}, "class_name": "ScadeToolsProcessor", "license_url": null}