{"init_kwargs": {"input_desc": {"properties": {"credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {}}, "binaryPropertyName": {"anyOf": [{"x-order": 1, "title": "Input Binary Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["csv", "html", "rtf", "ods", "xls", "xlsx"]}}, "displayName": "Input Binary Field", "type": "string"}, {"x-order": 3, "title": "Input Binary Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["binaryToPropery", "fromJson", "text", "fromIcs", "xml"]}}, "displayName": "Input Binary Field", "type": "string"}, {"x-order": 6, "title": "Input Binary Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["pdf"]}}, "displayName": "Input Binary Field", "type": "string"}]}, "options": {"anyOf": [{"x-order": 2, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["csv", "html", "rtf", "ods", "xls", "xlsx"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"range": {"x-order": 5, "description": "The range to read from the table. If set to a number it will be the starting row. If set to string it will be used as A1-style notation range.", "title": "Range", "temp_default": "", "displayOptions": {"show": {"/operation": ["ods", "xls", "xlsx"]}}, "displayName": "Range", "type": "string"}, "enableBOM": {"x-order": 1, "description": "Whether to detect and exclude the byte-order-mark from the CSV Input if present", "title": "Exclude Byte Order Mark (BOM)", "temp_default": false, "default": false, "displayOptions": {"show": {"/operation": ["csv"]}}, "displayName": "Exclude Byte Order Mark (BOM)", "type": "boolean"}, "readAsString": {"x-order": 7, "description": "In some cases and file formats, it is necessary to read as string to ensure special characters are interpreted correctly", "title": "Read As String", "temp_default": false, "default": false, "displayName": "Read As String", "type": "boolean"}, "sheetName": {"x-order": 8, "description": "Name of the sheet to read from in the spreadsheet", "title": "Sheet Name", "temp_default": "Sheet", "default": "Sheet", "displayOptions": {"show": {"/operation": ["ods", "xls", "xlsx"]}}, "displayName": "Sheet Name", "type": "string"}, "delimiter": {"x-order": 0, "description": "Set the field delimiter, usually a comma", "title": "Delimiter", "temp_default": ",", "default": ",", "displayOptions": {"show": {"/operation": ["csv"]}}, "displayName": "Delimiter", "type": "string"}, "includeEmptyCells": {"x-order": 3, "description": "Whether to include empty cells when reading from file. They will be filled with an empty string.", "title": "Include Empty Cells", "temp_default": false, "default": false, "displayOptions": {"show": {"/operation": ["ods", "xls", "xlsx", "csv", "html"]}}, "displayName": "Include Empty Cells", "type": "boolean"}, "rawData": {"x-order": 6, "description": "Whether to return RAW data, instead of parsing it", "title": "RAW Data", "temp_default": false, "default": false, "displayName": "RAW Data", "type": "boolean"}, "headerRow": {"x-order": 2, "description": "Whether the first row of the file contains the header names", "title": "Header Row", "temp_default": true, "default": true, "displayOptions": {"show": {"/operation": ["ods", "xls", "xlsx", "csv", "html"]}}, "displayName": "Header Row", "type": "boolean"}, "fromLine": {"x-order": 9, "description": "Start handling records from the requested line number. Starts at 0.", "title": "Starting Line", "temp_default": 0, "displayOptions": {"show": {"/operation": ["csv"]}}, "displayName": "Starting Line", "type": "number"}, "maxRowCount": {"x-order": 4, "description": "Stop handling records after the requested number of rows are read. Use -1 if you want to load all rows.", "title": "Max Number of Rows to Load", "temp_default": -1, "default": -1, "displayOptions": {"show": {"/operation": ["csv"]}}, "displayName": "Max Number of Rows to Load", "type": "number"}}, "required": []}, {"x-order": 5, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["binaryToPropery", "fromJson", "text", "fromIcs", "xml"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"encoding": {"x-order": 0, "description": "Specify the encoding of the file, defaults to UTF-8", "title": "File Encoding", "temp_default": "utf8", "default": "utf8", "displayName": "File Encoding", "enum": ["armscii8", "ascii", "base64", "big5hkscs", "binary", "cesu8", "cp1046", "cp1124", "cp1125", "cp1129", "cp1133", "cp1161", "cp1162", "cp1163", "cp437", "cp720", "cp737", "cp775", "cp808", "cp850", "cp852", "cp855", "cp856", "cp857", "cp858", "cp860", "cp861", "cp862", "cp863", "cp864", "cp865", "cp866", "cp869", "cp922", "cp936", "cp949", "cp950", "eucjp", "gb18030", "gbk", "georgianacademy", "georgianps", "hex", "hproman8", "iso646cn", "iso646jp", "iso88591", "iso885910", "iso885911", "iso885913", "iso885914", "iso885915", "iso885916", "iso88592", "iso88593", "iso88594", "iso88595", "iso88596", "iso88597", "iso88598", "iso88599", "koi8r", "koi8ru", "koi8t", "koi8u", "maccenteuro", "maccroatian", "maccyrillic", "macgreek", "maciceland", "macintosh", "macroman", "macromania", "macthai", "macturkish", "macukraine", "mik", "pt154", "rk1048", "shiftjis", "tcvn", "tis620", "ucs2", "utf16", "utf16be", "utf32", "utf32be", "utf32le", "utf7", "utf7imap", "utf8", "viscii", "windows1250", "windows1251", "windows1252", "windows1253", "windows1254", "windows1255", "windows1256", "windows1257", "windows1258", "windows874"]}, "stripBOM": {"x-order": 1, "description": "Whether to strip the BOM (Byte Order Mark) from the file, this could help in an environment where the presence of the BOM is causing issues or inconsistencies", "title": "Strip BOM", "temp_default": true, "default": true, "displayOptions": {"show": {"encoding": ["utf8", "cesu8", "ucs2"]}}, "displayName": "Strip BOM", "type": "boolean"}, "keepSource": {"x-order": 2, "title": "Keep Source", "temp_default": "json", "default": "json", "displayName": "Keep Source", "enum": ["json", "binary", "both"]}}, "required": []}, {"x-order": 7, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["pdf"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"joinPages": {"x-order": 0, "description": "Whether to join the text from all pages or return an array of text from each page", "title": "Join Pages", "temp_default": true, "default": true, "displayName": "Join Pages", "type": "boolean"}, "password": {"x-order": 3, "description": "Prowide password, if the PDF is encrypted", "title": "Password", "temp_default": "", "typeOptions": {"password": true}, "displayName": "Password", "type": "string"}, "maxPages": {"x-order": 2, "description": "Maximum number of pages to include", "title": "Max Pages", "temp_default": 0, "displayName": "Max Pages", "type": "number"}, "keepSource": {"x-order": 1, "title": "Keep Source", "temp_default": "json", "default": "json", "displayName": "Keep Source", "enum": ["json", "binary", "both"]}}, "required": []}]}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "destinationKey": {"x-order": 4, "description": "The name of the output field that will contain the extracted data", "title": "Destination Output Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["binaryToPropery", "fromJson", "text", "fromIcs", "xml"]}}, "displayName": "Destination Output Field", "type": "string"}, "operation": {"x-order": 0, "title": "Operation", "temp_default": "csv", "default": "csv", "displayName": "Operation", "enum": ["csv", "html", "fromJson", "fromIcs", "ods", "pdf", "rtf", "text", "xml", "xls", "xlsx", "binaryToPropery"]}}, "required": ["binaryPropertyName", "destinationKey"], "title": "Input", "type": "object"}, "title": "Scade tools: Extract From File", "description": "Convert binary data to JSON", "scade_tools_node_name": "scade-tools-nodes-base.extractFromFile", "scade_tools_node_version": 1, "categories": ["Core Nodes"]}, "class_name": "ScadeToolsProcessor", "license_url": null}