{"init_kwargs": {"input_desc": {"properties": {"updateFields": {"x-order": 8, "title": "Update Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["message"], "operation": ["update"]}}, "displayName": "Update Fields", "type": "object", "ui-type": "collections", "properties": {"content": {"x-order": 0, "description": "The content of the message", "title": "Content", "temp_default": "", "displayName": "Content", "type": "string"}, "propagateMode": {"x-order": 1, "description": "Which message(s) should be edited: just the one indicated in message_id, messages in the same topic that had been sent after this one, or all of them", "title": "Propagate Mode", "temp_default": "changeOne", "default": "changeOne", "displayName": "Propagate Mode", "enum": ["changeOne", "changeLater", "changeAll"]}, "topic": {"x-order": 2, "description": "The topic of the message. Only required for stream messages.", "title": "Topic", "temp_default": "", "displayName": "Topic", "type": "string"}}, "required": []}, "content": {"anyOf": [{"x-order": 3, "description": "The content of the message", "title": "Content", "temp_default": "", "displayOptions": {"show": {"resource": ["message"], "operation": ["sendPrivate"]}}, "displayName": "Content", "type": "string"}, {"x-order": 6, "description": "The content of the message", "title": "Content", "temp_default": "", "displayOptions": {"show": {"resource": ["message"], "operation": ["sendStream"]}}, "displayName": "Content", "type": "string"}]}, "stream": {"x-order": 4, "description": "The destination stream, or a comma-separated list containing the usernames (emails) of the recipients. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Stream Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["message"], "operation": ["sendStream"]}}, "typeOptions": {"loadOptionsMethod": "getStreams"}, "displayName": "Stream Name or ID", "enum": []}, "fullName": {"x-order": 26, "description": "The full name of the new user", "title": "Full Name", "temp_default": "", "displayOptions": {"show": {"resource": ["user"], "operation": ["create"]}}, "displayName": "Full Name", "type": "string"}, "jsonParameters": {"anyOf": [{"x-order": 13, "title": "JSON Parameters", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["stream"], "operation": ["create"]}}, "displayName": "JSON Parameters", "type": "boolean"}, {"x-order": 20, "title": "JSON Parameters", "temp_default": false, "default": false, "displayOptions": {"show": {"resource": ["stream"], "operation": ["update"]}}, "displayName": "JSON Parameters", "type": "boolean"}]}, "shortName": {"x-order": 28, "description": "The short name of the new user. Not user-visible.", "title": "Short Name", "temp_default": "", "displayOptions": {"show": {"resource": ["user"], "operation": ["create"]}}, "displayName": "Short Name", "type": "string"}, "userId": {"anyOf": [{"x-order": 29, "description": "The ID of user to get", "title": "User ID", "temp_default": "", "displayOptions": {"show": {"resource": ["user"], "operation": ["get"]}}, "displayName": "User ID", "type": "string"}, {"x-order": 31, "description": "The ID of user to update", "title": "User ID", "temp_default": "", "displayOptions": {"show": {"resource": ["user"], "operation": ["update"]}}, "displayName": "User ID", "type": "string"}, {"x-order": 33, "description": "The ID of user to deactivate", "title": "User ID", "temp_default": "", "displayOptions": {"show": {"resource": ["user"], "operation": ["deactivate"]}}, "displayName": "User ID", "type": "string"}]}, "email": {"x-order": 25, "description": "The email address of the new user", "title": "Email", "temp_default": "", "displayOptions": {"show": {"resource": ["user"], "operation": ["create"]}}, "displayName": "Email", "type": "string"}, "additionalFieldsJson": {"anyOf": [{"x-order": 14, "description": "JSON format parameters for stream creation", "title": "Additional Fields", "temp_default": "", "displayOptions": {"show": {"resource": ["stream"], "operation": ["create"], "jsonParameters": [true]}}, "typeOptions": {"alwaysOpenEditWindow": true}, "displayName": "Additional Fields", "type": "string", "ui-type": "json"}, {"x-order": 21, "description": "JSON format parameters for stream creation", "title": "Additional Fields", "temp_default": "", "displayOptions": {"show": {"resource": ["stream"], "operation": ["update"], "jsonParameters": [true]}}, "typeOptions": {"alwaysOpenEditWindow": true}, "displayName": "Additional Fields", "type": "string", "ui-type": "json"}]}, "dataBinaryProperty": {"x-order": 11, "title": "Put Output File in Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"resource": ["message"], "operation": ["updateFile"]}}, "displayName": "Put Output File in Field", "readOnly": true, "type": "string"}, "password": {"x-order": 27, "description": "The password of the new user", "title": "Password", "temp_default": "", "displayOptions": {"show": {"resource": ["user"], "operation": ["create"]}}, "typeOptions": {"password": true}, "displayName": "Password", "type": "string"}, "streamId": {"anyOf": [{"x-order": 19, "description": "ID of stream to update", "title": "Stream ID", "temp_default": "", "displayOptions": {"show": {"resource": ["stream"], "operation": ["update"]}}, "displayName": "Stream ID", "type": "string"}, {"x-order": 23, "description": "ID of stream to delete", "title": "Stream ID", "temp_default": "", "displayOptions": {"show": {"resource": ["stream"], "operation": ["delete"]}}, "displayName": "Stream ID", "type": "string"}]}, "operation": {"anyOf": [{"x-order": 1, "title": "Operation", "temp_default": "sendPrivate", "default": "sendPrivate", "displayOptions": {"show": {"resource": ["message"]}}, "displayName": "Operation", "enum": ["delete", "get", "sendPrivate", "sendStream", "update", "updateFile"]}, {"x-order": 12, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["stream"]}}, "displayName": "Operation", "enum": ["create", "delete", "getAll", "getSubscribed", "update"]}, {"x-order": 24, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["user"]}}, "displayName": "Operation", "enum": ["create", "deactivate", "get", "getAll", "update"]}]}, "messageId": {"anyOf": [{"x-order": 7, "description": "Unique identifier for the message", "title": "Message ID", "temp_default": "", "displayOptions": {"show": {"resource": ["message"], "operation": ["update"]}}, "displayName": "Message ID", "type": "string"}, {"x-order": 9, "description": "Unique identifier for the message", "title": "Message ID", "temp_default": "", "displayOptions": {"show": {"resource": ["message"], "operation": ["get"]}}, "displayName": "Message ID", "type": "string"}, {"x-order": 10, "description": "Unique identifier for the message", "title": "Message ID", "temp_default": "", "displayOptions": {"show": {"resource": ["message"], "operation": ["delete"]}}, "displayName": "Message ID", "type": "string"}]}, "credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {"zulipApi": {"type": "object", "properties": {"id": {"type": "integer"}}}}}, "to": {}, "resource": {"x-order": 0, "title": "Resource", "temp_default": "message", "default": "message", "displayName": "Resource", "enum": ["message", "stream", "user"]}, "additionalFields": {"anyOf": [{"x-order": 16, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["stream"], "operation": ["create"], "jsonParameters": [false]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"streamPostPolicy": {"x-order": 5, "description": "Policy for which users can post messages to the stream", "title": "Stream Post Policy", "temp_default": "", "displayName": "Stream Post Policy", "enum": [1, 2, 3]}, "authorizationErrorsFatal": {"x-order": 1, "description": "Whether authorization errors (such as when the requesting user is not authorized to access a private stream) should be considered fatal or not. When True, an authorization error is reported as such. When set to False, the returned JSON payload indicates that there was an authorization error, but the response is still considered a successful one.", "title": "Authorization Errors Fatal", "temp_default": false, "default": false, "displayName": "Authorization Errors Fatal", "type": "boolean"}, "announce": {"x-order": 0, "description": "If announce is True and one of the streams specified in subscriptions has to be created (i.e. doesnt exist to begin with), an announcement will be made notifying that a new stream was created.", "title": "Announce", "temp_default": false, "default": false, "displayName": "Announce", "type": "boolean"}, "historyPublicToSubscribers": {"x-order": 2, "description": "Whether the streams message history should be available to newly subscribed members, or users can only access messages they actually received while subscribed to the stream", "title": "History Public to Subscribers", "temp_default": false, "default": false, "displayName": "History Public to Subscribers", "type": "boolean"}, "principals": {"x-order": 4, "description": "A list of email addresses of the users that will be subscribed/unsubscribed to the streams specified in the subscriptions argument. If not provided, then the requesting user/bot is subscribed.", "title": "Principals", "temp_default": {}, "typeOptions": {"multipleValues": true}, "displayName": "Principals", "type": "object", "properties": {"properties": {"title": "Principals Properties", "displayName": "Principals Properties", "type": "array", "items": {"type": "object", "properties": {"email": {"x-order": 0, "description": "Principal email address", "title": "Principal Email", "temp_default": "", "displayName": "Principal Email", "type": "string"}}, "required": ["email"]}}}}, "inviteOnly": {"x-order": 3, "description": "Whether the streams specified in subscriptions are invite-only or not", "title": "Invite Only", "temp_default": false, "default": false, "displayName": "Invite Only", "type": "boolean"}}, "required": []}, {"x-order": 17, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["stream"], "operation": ["getAll"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"includePublic": {"x-order": 3, "description": "Whether to include all public streams", "title": "Include Public", "temp_default": true, "default": true, "displayName": "Include Public", "type": "boolean"}, "includeSubscribed": {"x-order": 4, "description": "Whether to include all streams that the user is subscribed to", "title": "Include Subscribed", "temp_default": true, "default": true, "displayName": "Include Subscribed", "type": "boolean"}, "includeDefault": {"x-order": 1, "description": "Whether to include all default streams for the users realm", "title": "Include Default", "temp_default": true, "default": true, "displayName": "Include Default", "type": "boolean"}, "includeAllActive": {"x-order": 0, "description": "Whether to include all active streams. The user must have administrative privileges to use this parameter.", "title": "Include All Active", "temp_default": true, "default": true, "displayName": "Include All Active", "type": "boolean"}, "includeOwnersubscribed": {"x-order": 2, "description": "Whether the user is a bot, include all streams that the bots owner is subscribed to", "title": "Include Owner Subscribed", "temp_default": true, "default": true, "displayName": "Include Owner Subscribed", "type": "boolean"}}, "required": []}, {"x-order": 18, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["stream"], "operation": ["getSubscribed"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"includeSubscribers": {"x-order": 0, "description": "Whether each returned stream object should include a subscribers field containing a list of the user IDs of its subscribers", "title": "Include Subscribers", "temp_default": true, "default": true, "displayName": "Include Subscribers", "type": "boolean"}}, "required": []}, {"x-order": 22, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["stream"], "operation": ["update"], "jsonParameters": [false]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"streamPostPolicy": {"x-order": 5, "description": "Policy for which users can post messages to the stream", "title": "Stream Post Policy", "temp_default": "", "displayName": "Stream Post Policy", "enum": [1, 2, 3]}, "newName": {"x-order": 4, "description": "The new name for the stream", "title": "New Name", "temp_default": "", "displayName": "New Name", "type": "string"}, "historyPublicToSubscribers": {"x-order": 3, "description": "Whether the streams message history should be available to newly subscribed members, or users can only access messages they actually received while subscribed to the stream", "title": "History Public to Subscribers", "temp_default": false, "default": false, "displayName": "History Public to Subscribers", "type": "boolean"}, "description": {"x-order": 1, "description": "The new description for the stream", "title": "Description", "temp_default": "", "displayName": "Description", "type": "string"}, "isPrivate": {"x-order": 2, "description": "Whether the stream is a private stream", "title": "Is Private", "temp_default": false, "default": false, "displayName": "Is Private", "type": "boolean"}, "isAnnouncementOnly": {"x-order": 0, "description": "Whether the stream is limited to announcements", "title": "Announcement Only", "temp_default": false, "default": false, "displayName": "Announcement Only", "type": "boolean"}}, "required": []}, {"x-order": 30, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["user"], "operation": ["get", "getAll"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"includeCustomProfileFields": {"x-order": 1, "description": "Whether the client wants custom profile field data to be included in the response", "title": "Custom Profile Fields", "temp_default": false, "default": false, "displayName": "Custom Profile Fields", "type": "boolean"}, "clientGravatar": {"x-order": 0, "description": "Whether the client supports computing gravatars URLs. If enabled, avatar_url will be included in the response only if there is a Zulip avatar, and will be null for users who are using gravatar as their avatar.", "title": "Client Gravatar", "temp_default": false, "default": false, "displayName": "Client Gravatar", "type": "boolean"}}, "required": []}, {"x-order": 32, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["user"], "operation": ["update"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"fullName": {"x-order": 0, "description": "The users full name", "title": "Full Name", "temp_default": "", "displayName": "Full Name", "type": "string"}, "role": {"x-order": 4, "description": "Role for the user", "title": "Role", "temp_default": "", "displayName": "Role", "enum": [600, 400, 200, 300, 100]}, "isAdmin": {"x-order": 1, "description": "Whether the target user is an administrator", "title": "Is Admin", "temp_default": false, "default": false, "displayName": "Is Admin", "type": "boolean"}, "profileData": {"x-order": 3, "description": "A dictionary containing the to be updated custom profile field data for the user", "title": "Profile Data", "temp_default": {}, "typeOptions": {"multipleValues": true}, "displayName": "Profile Data", "type": "object", "properties": {"property": {"title": "Property", "displayName": "Property", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 1, "description": "Value of custom profile data", "title": "Value", "temp_default": "", "displayName": "Value", "type": "string"}, "id": {"x-order": 0, "description": "ID of custom profile data value", "title": "ID", "temp_default": "", "displayName": "ID", "type": "string"}}, "required": ["value", "id"]}}}}, "isGuest": {"x-order": 2, "description": "Whether the target user is a guest", "title": "Is Guest", "temp_default": false, "default": false, "displayName": "Is Guest", "type": "boolean"}}, "required": []}]}, "subscriptions": {"x-order": 15, "description": "A list of dictionaries containing the the key name and value specifying the name of the stream to subscribe. If the stream does not exist a new stream is created.", "title": "Subscriptions", "temp_default": {}, "displayOptions": {"show": {"resource": ["stream"], "operation": ["create"], "jsonParameters": [false]}}, "typeOptions": {"multipleValues": true}, "displayName": "Subscriptions", "type": "object", "properties": {"properties": {"title": "Subscription Properties", "displayName": "Subscription Properties", "type": "array", "items": {"type": "object", "properties": {"name": {"x-order": 0, "description": "Name of Subscription", "title": "Name", "temp_default": "", "displayName": "Name", "type": "string"}, "description": {"x-order": 1, "description": "Description of Subscription", "title": "Description", "temp_default": "", "displayName": "Description", "type": "string"}}, "required": ["name", "description"]}}}}, "topic": {"x-order": 5, "description": "The topic of the message. Only required if type is stream, ignored otherwise. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Topic Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["message"], "operation": ["sendStream"]}}, "typeOptions": {"loadOptionsDependsOn": ["stream"], "loadOptionsMethod": "getTopics"}, "displayName": "Topic Name or ID", "enum": []}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}}, "required": ["content", "to", "stream", "shortName", "userId", "fullName", "email", "subscriptions", "topic", "dataBinaryProperty", "password", "streamId", "messageId"], "title": "Input", "type": "object"}, "title": "Scade tools: Zulip", "description": "Consume Zulip API", "scade_tools_node_name": "scade-tools-nodes-base.zulip", "scade_tools_node_version": 1, "categories": ["Communication"]}, "class_name": "ScadeToolsProcessor", "license_url": null}