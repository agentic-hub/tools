{"init_kwargs": {"input_desc": {"properties": {"folderKey": {"x-order": 16, "title": "Folder Key", "temp_default": "", "displayOptions": {"show": {"resource": ["folder"], "operation": ["delete"]}}, "displayName": "Folder Key", "type": "string"}, "returnAll": {"anyOf": [{"x-order": 5, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["bucket"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 8, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["search"], "resource": ["bucket"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 18, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["folder"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 40, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["file"]}}, "displayName": "Return All", "type": "boolean"}]}, "binaryPropertyName": {"anyOf": [{"x-order": 30, "title": "Input Binary Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["upload"], "resource": ["file"], "binaryData": [true]}}, "displayName": "Input Binary Field", "type": "string"}, {"x-order": 35, "title": "Put Output File in Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["download"], "resource": ["file"]}}, "displayName": "Put Output File in Field", "readOnly": true, "type": "string"}]}, "fileContent": {"x-order": 29, "description": "The text content of the file to upload", "title": "File Content", "temp_default": "", "displayOptions": {"show": {"operation": ["upload"], "resource": ["file"], "binaryData": [false]}}, "displayName": "File Content", "type": "string"}, "tagsUi": {"x-order": 32, "description": "Optional extra headers to add to the message (most headers are allowed)", "title": "Tags", "temp_default": {}, "displayOptions": {"show": {"resource": ["file"], "operation": ["upload"]}}, "typeOptions": {"multipleValues": true}, "displayName": "Tags", "type": "object", "properties": {"tagsValues": {"title": "Tag", "displayName": "Tag", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 1, "title": "Value", "temp_default": "", "displayName": "Value", "type": "string"}, "key": {"x-order": 0, "title": "Key", "temp_default": "", "displayName": "Key", "type": "string"}}, "required": ["value", "key"]}}}}, "operation": {"anyOf": [{"x-order": 1, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["bucket"]}}, "displayName": "Operation", "enum": ["create", "delete", "getAll", "search", "__CUSTOM_API_CALL__"]}, {"x-order": 11, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["folder"]}}, "displayName": "Operation", "enum": ["create", "delete", "getAll", "__CUSTOM_API_CALL__"]}, {"x-order": 21, "title": "Operation", "temp_default": "download", "default": "download", "displayOptions": {"show": {"resource": ["file"]}}, "displayName": "Operation", "enum": ["copy", "delete", "download", "getAll", "upload", "__CUSTOM_API_CALL__"]}]}, "binaryData": {"x-order": 28, "description": "Whether the data to upload should be taken from binary field", "title": "Binary File", "temp_default": true, "default": true, "displayOptions": {"show": {"operation": ["upload"], "resource": ["file"]}}, "displayName": "Binary File", "type": "boolean"}, "name": {"anyOf": [{"x-order": 2, "description": "A succinct description of the nature, symptoms, cause, or effect of the bucket", "title": "Name", "temp_default": "", "displayOptions": {"show": {"resource": ["bucket"], "operation": ["create"]}}, "displayName": "Name", "type": "string"}, {"x-order": 4, "description": "Name of the AWS S3 bucket to delete", "title": "Name", "temp_default": "", "displayOptions": {"show": {"resource": ["bucket"], "operation": ["delete"]}}, "displayName": "Name", "type": "string"}]}, "limit": {"anyOf": [{"x-order": 6, "description": "Max number of results to return", "title": "Limit", "temp_default": 100, "default": 100, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["bucket"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 500}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 500}, {"x-order": 9, "description": "Max number of results to return", "title": "Limit", "temp_default": 100, "default": 100, "displayOptions": {"show": {"operation": ["search"], "resource": ["bucket"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 500}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 500}, {"x-order": 19, "description": "Max number of results to return", "title": "Limit", "temp_default": 100, "default": 100, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["folder"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 500}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 500}, {"x-order": 41, "description": "Max number of results to return", "title": "Limit", "temp_default": 100, "default": 100, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["file"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 500}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 500}]}, "options": {"anyOf": [{"x-order": 20, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["folder"], "operation": ["getAll"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"fetchOwner": {"x-order": 0, "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true", "title": "Fetch Owner", "temp_default": false, "default": false, "displayName": "Fetch Owner", "type": "boolean"}, "folderKey": {"x-order": 1, "title": "Folder Key", "temp_default": "", "displayName": "Folder Key", "type": "string"}}, "required": []}, {"x-order": 38, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["file"], "operation": ["delete"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"versionId": {"x-order": 0, "title": "Version ID", "temp_default": "", "displayName": "Version ID", "type": "string"}}, "required": []}, {"x-order": 42, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"resource": ["file"], "operation": ["getAll"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"fetchOwner": {"x-order": 0, "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true", "title": "Fetch Owner", "temp_default": false, "default": false, "displayName": "Fetch Owner", "type": "boolean"}, "folderKey": {"x-order": 1, "title": "Folder Key", "temp_default": "", "displayName": "Folder Key", "type": "string"}}, "required": []}]}, "folderName": {"x-order": 13, "title": "Folder Name", "temp_default": "", "displayOptions": {"show": {"resource": ["folder"], "operation": ["create"]}}, "displayName": "Folder Name", "type": "string"}, "bucketName": {"anyOf": [{"x-order": 7, "title": "Bucket Name", "temp_default": "", "displayOptions": {"show": {"resource": ["bucket"], "operation": ["search"]}}, "displayName": "Bucket Name", "type": "string"}, {"x-order": 12, "title": "Bucket Name", "temp_default": "", "displayOptions": {"show": {"resource": ["folder"], "operation": ["create"]}}, "displayName": "Bucket Name", "type": "string"}, {"x-order": 15, "title": "Bucket Name", "temp_default": "", "displayOptions": {"show": {"resource": ["folder"], "operation": ["delete"]}}, "displayName": "Bucket Name", "type": "string"}, {"x-order": 17, "title": "Bucket Name", "temp_default": "", "displayOptions": {"show": {"resource": ["folder"], "operation": ["getAll"]}}, "displayName": "Bucket Name", "type": "string"}, {"x-order": 25, "title": "Bucket Name", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["upload"]}}, "displayName": "Bucket Name", "type": "string"}, {"x-order": 33, "title": "Bucket Name", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["download"]}}, "displayName": "Bucket Name", "type": "string"}, {"x-order": 36, "title": "Bucket Name", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["delete"]}}, "displayName": "Bucket Name", "type": "string"}, {"x-order": 39, "title": "Bucket Name", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["getAll"]}}, "displayName": "Bucket Name", "type": "string"}]}, "destinationPath": {"x-order": 23, "description": "The name of the destination bucket and key name of the destination object, separated by a slash (/)", "title": "Destination Path", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["copy"]}}, "displayName": "Destination Path", "type": "string"}, "sourcePath": {"x-order": 22, "description": "The name of the source bucket and key name of the source object, separated by a slash (/)", "title": "Source Path", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["copy"]}}, "displayName": "Source Path", "type": "string"}, "credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {"aws": {"type": "object", "properties": {"id": {"type": "integer"}}}}}, "additionalFields": {"anyOf": [{"x-order": 3, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["bucket"], "operation": ["create"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"bucketObjectLockEnabled": {"x-order": 1, "description": "Whether you want S3 Object Lock to be enabled for the new bucket", "title": "Bucket Object Lock Enabled", "temp_default": false, "default": false, "displayName": "Bucket Object Lock Enabled", "type": "boolean"}, "grantRead": {"x-order": 3, "description": "Whether to allow grantee to list the objects in the bucket", "title": "Grant Read", "temp_default": false, "default": false, "displayName": "Grant Read", "type": "boolean"}, "grantReadAcp": {"x-order": 4, "description": "Whether to allow grantee to read the bucket ACL", "title": "Grant Read ACP", "temp_default": false, "default": false, "displayName": "Grant Read ACP", "type": "boolean"}, "region": {"x-order": 7, "description": "Region you want to create the bucket in, by default the buckets are created on the region defined on the credentials", "title": "Region", "temp_default": "", "displayName": "Region", "type": "string"}, "acl": {"x-order": 0, "description": "The canned ACL to apply to the bucket", "title": "ACL", "temp_default": "", "displayName": "ACL", "enum": ["authenticatedRead", "Private", "publicRead", "publicReadWrite"]}, "grantWriteAcp": {"x-order": 6, "description": "Whether to allow grantee to write the ACL for the applicable bucket", "title": "Grant Write ACP", "temp_default": false, "default": false, "displayName": "Grant Write ACP", "type": "boolean"}, "grantWrite": {"x-order": 5, "description": "Whether to allow grantee to create, overwrite, and delete any object in the bucket", "title": "Grant Write", "temp_default": false, "default": false, "displayName": "Grant Write", "type": "boolean"}, "grantFullControl": {"x-order": 2, "description": "Whether to allow grantee the read, write, read ACP, and write ACP permissions on the bucket", "title": "Grant Full Control", "temp_default": false, "default": false, "displayName": "Grant Full Control", "type": "boolean"}}, "required": []}, {"x-order": 10, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["bucket"], "operation": ["search"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"encodingType": {"x-order": 1, "description": "Encoding type used by Amazon S3 to encode object keys in the response", "title": "Encoding Type", "temp_default": "", "displayName": "Encoding Type", "enum": ["url"]}, "fetchOwner": {"x-order": 2, "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true", "title": "Fetch Owner", "temp_default": false, "default": false, "displayName": "Fetch Owner", "type": "boolean"}, "requesterPays": {"x-order": 4, "description": "Whether the requester will pay for requests and data transfer. While Requester Pays is enabled, anonymous access to this bucket is disabled.", "title": "Requester Pays", "temp_default": false, "default": false, "displayName": "Requester Pays", "type": "boolean"}, "startAfter": {"x-order": 5, "description": "StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key.", "title": "Start After", "temp_default": "", "displayName": "Start After", "type": "string"}, "delimiter": {"x-order": 0, "description": "A delimiter is a character you use to group keys", "title": "Delimiter", "temp_default": "", "displayName": "Delimiter", "type": "string"}, "prefix": {"x-order": 3, "description": "Limits the response to keys that begin with the specified prefix", "title": "Prefix", "temp_default": "", "displayName": "Prefix", "type": "string"}}, "required": []}, {"x-order": 14, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["folder"], "operation": ["create"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"requesterPays": {"x-order": 1, "description": "Whether the requester will pay for requests and data transfer. While Requester Pays is enabled, anonymous access to this bucket is disabled.", "title": "Requester Pays", "temp_default": false, "default": false, "displayName": "Requester Pays", "type": "boolean"}, "storageClass": {"x-order": 2, "description": "Amazon S3 storage classes", "title": "Storage Class", "temp_default": "standard", "default": "standard", "displayName": "Storage Class", "enum": ["deepArchive", "glacier", "intelligentTiering", "onezoneIA", "RecudedRedundancy", "standard", "standardIA"]}, "parentFolderKey": {"x-order": 0, "description": "Parent folder you want to create the folder in", "title": "Parent Folder Key", "temp_default": "", "displayName": "Parent Folder Key", "type": "string"}}, "required": []}, {"x-order": 24, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["file"], "operation": ["copy"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"serversideEncryptionCustomerKey": {"x-order": 14, "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data", "title": "Server Side Encryption Customer Key", "temp_default": "", "displayName": "Server Side Encryption Customer Key", "type": "string"}, "storageClass": {"x-order": 16, "description": "Amazon S3 storage classes", "title": "Storage Class", "temp_default": "standard", "default": "standard", "displayName": "Storage Class", "enum": ["deepArchive", "glacier", "intelligentTiering", "onezoneIA", "standard", "standardIA"]}, "serversideEncryptionCustomerKeyMD5": {"x-order": 15, "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321", "title": "Server Side Encryption Customer Key MD5", "temp_default": "", "displayName": "Server Side Encryption Customer Key MD5", "type": "string"}, "taggingDirective": {"x-order": 17, "description": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request", "title": "Tagging Directive", "temp_default": "", "displayName": "Tagging Directive", "enum": ["copy", "replace"]}, "grantRead": {"x-order": 2, "description": "Whether to allow grantee to read the object data and its metadata", "title": "Grant Read", "temp_default": false, "default": false, "displayName": "Grant Read", "type": "boolean"}, "grantReadAcp": {"x-order": 3, "description": "Whether to allow grantee to read the object ACL", "title": "Grant Read ACP", "temp_default": false, "default": false, "displayName": "Grant Read ACP", "type": "boolean"}, "lockRetainUntilDate": {"x-order": 7, "description": "The date and time when you want this object's Object Lock to expire", "title": "Lock Retain Until Date", "temp_default": "", "displayName": "Lock Retain Until Date", "type": "string", "ui-type": "date-time"}, "requesterPays": {"x-order": 9, "description": "Whether the requester will pay for requests and data transfer. While Requester Pays is enabled, anonymous access to this bucket is disabled.", "title": "Requester Pays", "temp_default": false, "default": false, "displayName": "Requester Pays", "type": "boolean"}, "acl": {"x-order": 0, "description": "The canned ACL to apply to the object", "title": "ACL", "temp_default": "private", "default": "private", "displayName": "ACL", "enum": ["authenticatedRead", "awsExecRead", "bucketOwnerFullControl", "bucketOwnerRead", "private", "publicRead", "publicReadWrite"]}, "serverSideEncryption": {"x-order": 10, "description": "The server-side encryption algorithm used when storing this object in Amazon S3", "title": "Server Side Encryption", "temp_default": "", "displayName": "Server Side Encryption", "enum": ["AES256", "aws:kms"]}, "encryptionAwsKmsKeyId": {"x-order": 12, "description": "If x-amz-server-side-encryption is present and has the value of aws:kms", "title": "Server Side Encryption AWS KMS Key ID", "temp_default": "", "displayName": "Server Side Encryption AWS KMS Key ID", "type": "string"}, "grantWriteAcp": {"x-order": 4, "description": "Whether to allow grantee to write the ACL for the applicable object", "title": "Grant Write ACP", "temp_default": false, "default": false, "displayName": "Grant Write ACP", "type": "boolean"}, "serversideEncryptionCustomerAlgorithm": {"x-order": 13, "description": "Specifies the algorithm to use to when encrypting the object (for example, AES256)", "title": "Server Side Encryption Customer Algorithm", "temp_default": "", "displayName": "Server Side Encryption Customer Algorithm", "type": "string"}, "grantFullControl": {"x-order": 1, "description": "Whether to give the grantee READ, READ_ACP, and WRITE_ACP permissions on the object", "title": "Grant Full Control", "temp_default": false, "default": false, "displayName": "Grant Full Control", "type": "boolean"}, "metadataDirective": {"x-order": 8, "description": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request", "title": "Metadata Directive", "temp_default": "", "displayName": "Metadata Directive", "enum": ["copy", "replace"]}, "lockMode": {"x-order": 6, "description": "The Object Lock mode that you want to apply to this object", "title": "Lock Mode", "temp_default": "", "displayName": "Lock Mode", "enum": ["governance", "compliance"]}, "serverSideEncryptionContext": {"x-order": 11, "description": "Specifies the AWS KMS Encryption Context to use for object encryption", "title": "Server Side Encryption Context", "temp_default": "", "displayName": "Server Side Encryption Context", "type": "string"}, "lockLegalHold": {"x-order": 5, "description": "Whether a legal hold will be applied to this object", "title": "Lock Legal Hold", "temp_default": false, "default": false, "displayName": "Lock Legal Hold", "type": "boolean"}}, "required": []}, {"x-order": 31, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["file"], "operation": ["upload"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"serversideEncryptionCustomerKey": {"x-order": 14, "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data", "title": "Server Side Encryption Customer Key", "temp_default": "", "displayName": "Server Side Encryption Customer Key", "type": "string"}, "storageClass": {"x-order": 16, "description": "Amazon S3 storage classes", "title": "Storage Class", "temp_default": "standard", "default": "standard", "displayName": "Storage Class", "enum": ["deepArchive", "glacier", "intelligentTiering", "onezoneIA", "standard", "standardIA"]}, "serversideEncryptionCustomerKeyMD5": {"x-order": 15, "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321", "title": "Server Side Encryption Customer Key MD5", "temp_default": "", "displayName": "Server Side Encryption Customer Key MD5", "type": "string"}, "parentFolderKey": {"x-order": 8, "description": "Parent folder you want to create the file in", "title": "Parent Folder Key", "temp_default": "", "displayName": "Parent Folder Key", "type": "string"}, "grantRead": {"x-order": 2, "description": "Whether to allow grantee to read the object data and its metadata", "title": "Grant Read", "temp_default": false, "default": false, "displayName": "Grant Read", "type": "boolean"}, "grantReadAcp": {"x-order": 3, "description": "Whether to allow grantee to read the object ACL", "title": "Grant Read ACP", "temp_default": false, "default": false, "displayName": "Grant Read ACP", "type": "boolean"}, "lockRetainUntilDate": {"x-order": 7, "description": "The date and time when you want this object's Object Lock to expire", "title": "Lock Retain Until Date", "temp_default": "", "displayName": "Lock Retain Until Date", "type": "string", "ui-type": "date-time"}, "requesterPays": {"x-order": 9, "description": "Whether the requester will pay for requests and data transfer. While Requester Pays is enabled, anonymous access to this bucket is disabled.", "title": "Requester Pays", "temp_default": false, "default": false, "displayName": "Requester Pays", "type": "boolean"}, "acl": {"x-order": 0, "description": "The canned ACL to apply to the object", "title": "ACL", "temp_default": "private", "default": "private", "displayName": "ACL", "enum": ["authenticatedRead", "awsExecRead", "bucketOwnerFullControl", "bucketOwnerRead", "private", "publicRead", "publicReadWrite"]}, "serverSideEncryption": {"x-order": 10, "description": "The server-side encryption algorithm used when storing this object in Amazon S3", "title": "Server Side Encryption", "temp_default": "", "displayName": "Server Side Encryption", "enum": ["AES256", "aws:kms"]}, "encryptionAwsKmsKeyId": {"x-order": 12, "description": "If x-amz-server-side-encryption is present and has the value of aws:kms", "title": "Server Side Encryption AWS KMS Key ID", "temp_default": "", "displayName": "Server Side Encryption AWS KMS Key ID", "type": "string"}, "grantWriteAcp": {"x-order": 4, "description": "Whether to allow grantee to write the ACL for the applicable object", "title": "Grant Write ACP", "temp_default": false, "default": false, "displayName": "Grant Write ACP", "type": "boolean"}, "serversideEncryptionCustomerAlgorithm": {"x-order": 13, "description": "Specifies the algorithm to use to when encrypting the object (for example, AES256)", "title": "Server Side Encryption Customer Algorithm", "temp_default": "", "displayName": "Server Side Encryption Customer Algorithm", "type": "string"}, "grantFullControl": {"x-order": 1, "description": "Whether to give the grantee READ, READ_ACP, and WRITE_ACP permissions on the object", "title": "Grant Full Control", "temp_default": false, "default": false, "displayName": "Grant Full Control", "type": "boolean"}, "lockMode": {"x-order": 6, "description": "The Object Lock mode that you want to apply to this object", "title": "Lock Mode", "temp_default": "", "displayName": "Lock Mode", "enum": ["governance", "compliance"]}, "serverSideEncryptionContext": {"x-order": 11, "description": "Specifies the AWS KMS Encryption Context to use for object encryption", "title": "Server Side Encryption Context", "temp_default": "", "displayName": "Server Side Encryption Context", "type": "string"}, "lockLegalHold": {"x-order": 5, "description": "Whether a legal hold will be applied to this object", "title": "Lock Legal Hold", "temp_default": false, "default": false, "displayName": "Lock Legal Hold", "type": "boolean"}}, "required": []}]}, "resource": {"x-order": 0, "title": "Resource", "temp_default": "file", "default": "file", "displayName": "Resource", "enum": ["bucket", "file", "folder", "__CUSTOM_API_CALL__"]}, "fileName": {"anyOf": [{"x-order": 26, "title": "File Name", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["upload"], "binaryData": [false]}}, "displayName": "File Name", "type": "string"}, {"x-order": 27, "description": "If not set the binary data filename will be used", "title": "File Name", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["upload"], "binaryData": [true]}}, "displayName": "File Name", "type": "string"}]}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "fileKey": {"anyOf": [{"x-order": 34, "title": "File Key", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["download"]}}, "displayName": "File Key", "type": "string"}, {"x-order": 37, "title": "File Key", "temp_default": "", "displayOptions": {"show": {"resource": ["file"], "operation": ["delete"]}}, "displayName": "File Key", "type": "string"}]}}, "required": ["name", "binaryPropertyName", "folderName", "bucketName", "fileName", "folderKey", "destinationPath", "sourcePath", "fileKey"], "title": "Input", "type": "object"}, "title": "Scade tools: AWS S3", "description": "Sends data to AWS S3", "scade_tools_node_name": "scade-tools-nodes-base.awsS3", "scade_tools_node_version": 2, "categories": ["Development", "Data & Storage"]}, "class_name": "ScadeToolsProcessor", "license_url": null}