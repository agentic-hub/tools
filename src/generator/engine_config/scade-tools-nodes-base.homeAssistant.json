{"init_kwargs": {"input_desc": {"properties": {"credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {"homeAssistantApi": {"type": "object", "properties": {"id": {"type": "integer"}}}}}, "domain": {"x-order": 19, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Domain Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["service"], "operation": ["call"]}}, "typeOptions": {"loadOptionsMethod": "getDomains"}, "displayName": "Domain Name or ID", "enum": []}, "entityId": {"anyOf": [{"x-order": 23, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Entity Name or ID", "temp_default": "", "displayOptions": {"show": {"operation": ["get"], "resource": ["state"]}}, "typeOptions": {"loadOptionsMethod": "getAllEntities"}, "displayName": "Entity Name or ID", "enum": []}, {"x-order": 26, "description": "The entity ID for which a state will be created. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>.", "title": "Entity Name or ID", "temp_default": "", "displayOptions": {"show": {"operation": ["upsert"], "resource": ["state"]}}, "typeOptions": {"loadOptionsMethod": "getAllEntities"}, "displayName": "Entity Name or ID", "enum": []}]}, "returnAll": {"anyOf": [{"x-order": 6, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["event"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 11, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["history"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 17, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["service"]}}, "displayName": "Return All", "type": "boolean"}, {"x-order": 24, "description": "Whether to return all results or only up to a given limit", "title": "Return All", "temp_default": false, "default": false, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["state"]}}, "displayName": "Return All", "type": "boolean"}]}, "resource": {"x-order": 0, "title": "Resource", "temp_default": "config", "default": "config", "displayName": "Resource", "enum": ["cameraProxy", "config", "event", "log", "service", "state", "template"]}, "binaryPropertyName": {"x-order": 3, "title": "Put Output File in Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["getScreenshot"], "resource": ["cameraProxy"]}}, "displayName": "Put Output File in Field", "readOnly": true, "type": "string"}, "limit": {"anyOf": [{"x-order": 7, "description": "Max number of results to return", "title": "Limit", "temp_default": 50, "default": 50, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["event"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 100}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 100}, {"x-order": 12, "description": "Max number of results to return", "title": "Limit", "temp_default": 50, "default": 50, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["history"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 100}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 100}, {"x-order": 18, "description": "Max number of results to return", "title": "Limit", "temp_default": 50, "default": 50, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["service"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 100}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 100}, {"x-order": 25, "description": "Max number of results to return", "title": "Limit", "temp_default": 50, "default": 50, "displayOptions": {"show": {"operation": ["getAll"], "resource": ["state"], "returnAll": [false]}}, "typeOptions": {"minValue": 1, "maxValue": 100}, "displayName": "Limit", "type": "number", "minimum": 1, "maximum": 100}]}, "additionalFields": {"anyOf": [{"x-order": 13, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["history"], "operation": ["getAll"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"minimalResponse": {"x-order": 2, "description": "Whether to only return <code>last_changed</code> and state for states", "title": "Minimal Response", "temp_default": false, "default": false, "displayName": "Minimal Response", "type": "boolean"}, "startTime": {"x-order": 4, "description": "The beginning of the period", "title": "Start Time", "temp_default": "", "displayName": "Start Time", "type": "string", "ui-type": "date-time"}, "endTime": {"x-order": 0, "description": "The end of the period", "title": "End Time", "temp_default": "", "displayName": "End Time", "type": "string", "ui-type": "date-time"}, "entityIds": {"x-order": 1, "description": "The entities IDs separated by comma", "title": "Entity IDs", "temp_default": "", "displayName": "Entity IDs", "type": "string"}, "significantChangesOnly": {"x-order": 3, "description": "Whether to only return significant state changes", "title": "Significant Changes Only", "temp_default": false, "default": false, "displayName": "Significant Changes Only", "type": "boolean"}}, "required": []}, {"x-order": 15, "title": "Additional Fields", "temp_default": {}, "displayOptions": {"show": {"resource": ["log"], "operation": ["getLogbookEntries"]}}, "displayName": "Additional Fields", "type": "object", "ui-type": "collections", "properties": {"endTime": {"x-order": 0, "description": "The end of the period", "title": "End Time", "temp_default": "", "displayName": "End Time", "type": "string", "ui-type": "date-time"}, "startTime": {"x-order": 2, "description": "The beginning of the period", "title": "Start Time", "temp_default": "", "displayName": "Start Time", "type": "string", "ui-type": "date-time"}, "entityId": {"x-order": 1, "title": "Entity ID", "temp_default": "", "displayName": "Entity ID", "type": "string"}}, "required": []}]}, "service": {"x-order": 20, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Service Name or ID", "temp_default": "", "displayOptions": {"show": {"resource": ["service"], "operation": ["call"]}}, "typeOptions": {"loadOptionsDependsOn": ["domain"], "loadOptionsMethod": "getDomainServices"}, "displayName": "Service Name or ID", "enum": []}, "state": {"x-order": 27, "title": "State", "temp_default": "", "displayOptions": {"show": {"resource": ["state"], "operation": ["upsert"]}}, "displayName": "State", "type": "string"}, "serviceAttributes": {"x-order": 21, "title": "Service Attributes", "temp_default": {}, "displayOptions": {"show": {"resource": ["service"], "operation": ["call"]}}, "typeOptions": {"multipleValues": true}, "displayName": "Service Attributes", "type": "object", "properties": {"attributes": {"title": "Attributes", "displayName": "Attributes", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 1, "description": "Value of the field", "title": "Value", "temp_default": "", "displayName": "Value", "type": "string"}, "name": {"x-order": 0, "description": "Name of the field", "title": "Name", "temp_default": "", "displayName": "Name", "type": "string"}}, "required": ["value", "name"]}}}}, "template": {"x-order": 30, "description": "Render a Home Assistant template. <a href=\"https://www.home-assistant.io/docs/configuration/templating/\">See template docs for more information.</a>.", "title": "Template", "temp_default": "", "displayOptions": {"show": {"resource": ["template"], "operation": ["create"]}}, "displayName": "Template", "type": "string"}, "stateAttributes": {"x-order": 28, "title": "State Attributes", "temp_default": {}, "displayOptions": {"show": {"resource": ["state"], "operation": ["upsert"]}}, "typeOptions": {"multipleValues": true}, "displayName": "State Attributes", "type": "object", "properties": {"attributes": {"title": "Attributes", "displayName": "Attributes", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 1, "description": "Value of the attribute", "title": "Value", "temp_default": "", "displayName": "Value", "type": "string"}, "name": {"x-order": 0, "description": "Name of the attribute", "title": "Name", "temp_default": "", "displayName": "Name", "type": "string"}}, "required": ["value", "name"]}}}}, "eventAttributes": {"x-order": 9, "title": "Event Attributes", "temp_default": {}, "displayOptions": {"show": {"resource": ["event"], "operation": ["create"]}}, "typeOptions": {"multipleValues": true}, "displayName": "Event Attributes", "type": "object", "properties": {"attributes": {"title": "Attributes", "displayName": "Attributes", "type": "array", "items": {"type": "object", "properties": {"value": {"x-order": 1, "description": "Value of the attribute", "title": "Value", "temp_default": "", "displayName": "Value", "type": "string"}, "name": {"x-order": 0, "description": "Name of the attribute", "title": "Name", "temp_default": "", "displayName": "Name", "type": "string"}}, "required": ["value", "name"]}}}}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "operation": {"anyOf": [{"x-order": 1, "title": "Operation", "temp_default": "getScreenshot", "default": "getScreenshot", "displayOptions": {"show": {"resource": ["cameraProxy"]}}, "displayName": "Operation", "enum": ["getScreenshot"]}, {"x-order": 4, "title": "Operation", "temp_default": "get", "default": "get", "displayOptions": {"show": {"resource": ["config"]}}, "displayName": "Operation", "enum": ["get", "check"]}, {"x-order": 5, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["event"]}}, "displayName": "Operation", "enum": ["create", "getAll"]}, {"x-order": 10, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["history"]}}, "displayName": "Operation", "enum": ["getAll"]}, {"x-order": 14, "title": "Operation", "temp_default": "getErroLogs", "default": "getErroLogs", "displayOptions": {"show": {"resource": ["log"]}}, "displayName": "Operation", "enum": ["getErroLogs", "getLogbookEntries"]}, {"x-order": 16, "title": "Operation", "temp_default": "getAll", "default": "getAll", "displayOptions": {"show": {"resource": ["service"]}}, "displayName": "Operation", "enum": ["call", "getAll"]}, {"x-order": 22, "title": "Operation", "temp_default": "get", "default": "get", "displayOptions": {"show": {"resource": ["state"]}}, "displayName": "Operation", "enum": ["upsert", "get", "getAll"]}, {"x-order": 29, "title": "Operation", "temp_default": "create", "default": "create", "displayOptions": {"show": {"resource": ["template"]}}, "displayName": "Operation", "enum": ["create"]}]}, "eventType": {"x-order": 8, "description": "The Entity ID for which an event will be created", "title": "Event Type", "temp_default": "", "displayOptions": {"show": {"operation": ["create"], "resource": ["event"]}}, "displayName": "Event Type", "type": "string"}, "cameraEntityId": {"x-order": 2, "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code-examples/expressions/\">expression</a>", "title": "Camera Entity Name or ID", "temp_default": "", "displayOptions": {"show": {"operation": ["getScreenshot"], "resource": ["cameraProxy"]}}, "typeOptions": {"loadOptionsMethod": "getCameraEntities"}, "displayName": "Camera Entity Name or ID", "enum": []}}, "required": ["entityId", "binaryPropertyName", "cameraEntityId", "service", "template", "state", "eventType", "domain"], "title": "Input", "type": "object"}, "title": "Scade tools: Home Assistant", "description": "Consume Home Assistant API", "scade_tools_node_name": "scade-tools-nodes-base.homeAssistant", "scade_tools_node_version": 1, "categories": ["Miscellaneous"]}, "class_name": "ScadeToolsProcessor", "license_url": null}