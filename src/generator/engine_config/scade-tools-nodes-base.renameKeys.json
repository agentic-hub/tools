{"init_kwargs": {"input_desc": {"properties": {"credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {}}, "additionalOptions": {"x-order": 1, "title": "Additional Options", "temp_default": {}, "displayName": "Additional Options", "type": "object", "ui-type": "collections", "properties": {"regexReplacement": {"x-order": 0, "description": "Adds a regular expressiond", "title": "Regex", "temp_default": {}, "typeOptions": {"multipleValues": true, "sortable": true}, "displayName": "Regex", "type": "object", "properties": {"replacements": {"title": "Replacement", "displayName": "Replacement", "type": "array", "items": {"type": "object", "properties": {"regExNotice": {"x-order": 0, "title": "Be aware that by using regular expression previously renamed keys can be affected", "temp_default": "", "displayName": "Be aware that by using regular expression previously renamed keys can be affected", "type": "string", "ui-type": "notice"}, "replaceRegex": {"x-order": 2, "description": "The name the key/s should be renamed to. It's possible to use regex captures e.g. $1, $2, ...", "title": "Replace With", "temp_default": "", "displayName": "Replace With", "type": "string"}, "searchRegex": {"x-order": 1, "description": "Regex to match the key name", "title": "Regular Expression", "temp_default": "", "displayName": "Regular Expression", "type": "string"}, "options": {"x-order": 3, "title": "Options", "temp_default": {}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"caseInsensitive": {"x-order": 0, "description": "Whether to use case insensitive match", "title": "Case Insensitive", "temp_default": false, "default": false, "displayName": "Case Insensitive", "type": "boolean"}, "depth": {"x-order": 1, "description": "Maximum depth to replace keys", "title": "Max Depth", "temp_default": -1, "default": -1, "displayName": "Max Depth", "type": "number"}}, "required": []}}, "required": ["regExNotice", "replaceRegex", "searchRegex", "options"]}}}}}, "required": []}, "keys": {"x-order": 0, "description": "Adds a key which should be renamed", "title": "Keys", "temp_default": {}, "typeOptions": {"multipleValues": true, "sortable": true}, "displayName": "Keys", "type": "object", "properties": {"key": {"title": "Key", "displayName": "Key", "type": "array", "items": {"type": "object", "properties": {"newKey": {"x-order": 1, "description": "The name the key should be renamed to. It is also possible to define deep keys by using dot-notation like for example: \"level1.level2.newKey\".", "title": "New Key Name", "temp_default": "", "displayName": "New Key Name", "type": "string"}, "currentKey": {"x-order": 0, "description": "The current name of the key. It is also possible to define deep keys by using dot-notation like for example: \"level1.level2.currentKey\".", "title": "Current Key Name", "temp_default": "", "displayName": "Current Key Name", "type": "string"}}, "required": ["newKey", "currentKey"]}}}}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}}, "required": [], "title": "Input", "type": "object"}, "title": "Scade tools: Rename Keys", "description": "Update item field names", "scade_tools_node_name": "scade-tools-nodes-base.renameKeys", "scade_tools_node_version": 1, "categories": ["Core Nodes"]}, "class_name": "ScadeToolsProcessor", "license_url": null}