{"init_kwargs": {"input_desc": {"properties": {"credentials": {"type": "object", "ui-type": "collections", "x-order": -10, "properties": {}}, "dataPropertyName": {"x-order": 5, "title": "Input Binary Field", "temp_default": "data", "default": "data", "displayOptions": {"show": {"operation": ["write"]}}, "displayName": "Input Binary Field", "type": "string"}, "options": {"anyOf": [{"x-order": 3, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["read"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"mimeType": {"x-order": 2, "description": "Mime type of the file in the output binary", "title": "Mime Type", "temp_default": "", "displayName": "Mime Type", "type": "string"}, "fileName": {"x-order": 1, "description": "Name of the file in the output binary", "title": "File Name", "temp_default": "", "displayName": "File Name", "type": "string"}, "dataPropertyName": {"x-order": 3, "description": "By default 'data' is used", "title": "Put Output File in Field", "temp_default": "data", "default": "data", "displayName": "Put Output File in Field", "readOnly": true, "type": "string"}, "fileExtension": {"x-order": 0, "description": "Extension of the file in the output binary", "title": "File Extension", "temp_default": "", "displayName": "File Extension", "type": "string"}}, "required": []}, {"x-order": 6, "title": "Options", "temp_default": {}, "displayOptions": {"show": {"operation": ["write"]}}, "displayName": "Options", "type": "object", "ui-type": "collections", "properties": {"append": {"x-order": 0, "description": "Whether to append to an existing file. While it's commonly used with text files, it's not limited to them, however, it wouldn't be applicable for file types that have a specific structure like most binary formats.", "title": "Append", "temp_default": false, "default": false, "displayName": "Append", "type": "boolean"}}, "required": []}]}, "fileSelector": {"x-order": 2, "description": "Specify a file's path or path pattern to read multiple files", "title": "File(s) Selector", "temp_default": "", "displayOptions": {"show": {"operation": ["read"]}}, "displayName": "File(s) Selector", "type": "string"}, "fileName": {"x-order": 4, "description": "Path and name of the file that should be written. Also include the file extension.", "title": "File Path and Name", "temp_default": "", "displayOptions": {"show": {"operation": ["write"]}}, "displayName": "File Path and Name", "type": "string"}, "load_files": {"title": "Load files to context", "x-order": -5, "type": "array", "items": {"title": "File info", "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "displayOptions": {"show": {"group": ["url"]}}}, "base": {"title": "Bytes", "type": "string", "displayOptions": {"show": {"group": ["base"]}}}, "name": {"title": "Context filename", "type": "string", "default": "data"}, "group": {"type": "string", "default": "url", "enum": ["url", "base"]}}}}, "operation": {"x-order": 1, "title": "Operation", "temp_default": "read", "default": "read", "displayName": "Operation", "enum": ["read", "write"]}, "info": {"x-order": 0, "title": "Use this node to read and write files on the same computer running n8n. To handle files between different computers please use other nodes (e.g. FTP, HTTP Request, AWS).", "temp_default": "", "displayName": "Use this node to read and write files on the same computer running n8n. To handle files between different computers please use other nodes (e.g. FTP, HTTP Request, AWS).", "type": "string", "ui-type": "notice"}}, "required": ["fileSelector", "fileName", "dataPropertyName"], "title": "Input", "type": "object"}, "title": "Scade tools: Read/Write Files from Disk", "description": "Read or write files from the computer that runs n8n", "scade_tools_node_name": "scade-tools-nodes-base.readWriteFile", "scade_tools_node_version": 1, "categories": ["Core Nodes"]}, "class_name": "ScadeToolsProcessor", "license_url": null}